{"version":3,"sources":["components/header/app-header.module.css","components/burger-ingredients/burger-ingredients.module.css","components/ingredient-details/ingredient-details.module.css","utils/types.ts","components/ingedient/ingredient.tsx","components/burger-ingredients/burger-ingredients.tsx","components/ingredient-details/ingredient-details.tsx","images/check-mark.png","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/order-details/order-details.tsx","components/header/app-header.tsx","images/bun01.png","api/api.ts","services/actions/index.ts","components/constructor-item/constructor-item.tsx","utils/cookies-helpers.ts","components/burger-constructor/burger-constructor.tsx","pages/auth/auth-extra.tsx","pages/auth/auth-form.tsx","services/actions/auth.ts","pages/enterence/enterence.tsx","pages/registration/registration.tsx","pages/forgot-password/forgot-password.tsx","images/bun02.png","pages/not-found-page/not-found-page.tsx","pages/password-recovery/password-recovery.tsx","services/reducers/auth.ts","pages/profile-navigation/profile-navigation.tsx","pages/user-profile/user-profile.tsx","pages/order-feed/order-feed.tsx","components/protected-route/protected-route.tsx","components/non-login-route/non-login-route.tsx","components/app/app.tsx","reportWebVitals.ts","utils/array-helper.ts","services/reducers/index.ts","index.tsx","components/burger-constructor/burger-constructor.module.css","components/modal-overlay/modal-overlay.module.css","pages/auth/auth.module.css","pages/registration/registration.module.css","pages/profile-navigation/profile-navigation.module.css","components/ingedient/ingredient.module.css","pages/user-profile/user-profile.module.css","components/order-details/order-ditails.module.css","pages/enterence/enterence.module.css","components/app/app.module.css","pages/forgot-password/forgot-password.module.css","pages/not-found-page/not-found-page.module.css","pages/order-feed/order-feed.module.css"],"names":["module","exports","useSelector","selectorHook","Ingredient","props","ingredientsReducer","counter","constructorIngredients","useDrag","type","item","collect","monitor","isDrag","isDragging","dragRef","onClick","onItemClick","ref","className","styles","box","wrapper","image","src","img","alt","name","_id","count","size","findIndex","ing","isBunAdded","price","number","BurgerIngredients","location","useLocation","ingredients","bunSection","useRef","sauceSection","mainSection","React","useState","current","setCurrent","bunList","setBunList","sauceList","setSauceList","mainList","setMainList","onIngredientClick","useEffect","filter","body","header","nav","value","active","scrollIntoView","behavior","onScroll","event","scrollPosition","target","scrollTop","positionSauce","offsetTop","positionMain","tag","container","map","link","to","pathname","state","background","key","IngredientDetails","ingredientDetail","id","useParams","detail","Object","keys","length","find","descriptor","list","heading","numbers","calories","proteins","fat","carbohydrates","ModalOverlay","closeModal","isOpen","modal_open","overlay","evt","classList","contains","children","Modal","modalRoot","document","getElementById","closeByEscape","e","addEventListener","removeEventListener","ReactDOM","createPortal","btn","title","OrderDetails","order","isOrderDetailsOpen","CekMark","orderStatus","addInfo","AppHeader","navBox","navBox2","activeClassName","activeLink","text","logo","BASE_URL","handleResponse","res","ok","json","Promise","reject","status","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","GET_ORDER_INGREDIENTS_REQUEST","GET_ORDER_INGREDIENTS_SUCCESS","GET_ORDER_INGREDIENTS_FAILED","ADD_INGREDIENT_TO_CONSTRUCTOR","ADD_INGREDIENT_TO_NON_BUN_ITEMS","REMOVE_INGREDIENT_FROM_CONSTRUCTOR","SHOW_INGREDIENT","INCREASE_COUNTER","DECREASE_COUNTER","MOVE_INSIDE_CONSTRUCTOR","CLOSE_MODAL","REORDER_CONSTRUCTOR","getIngredients","dispatch","fetch","then","success","data","catch","err","console","log","getOrderIngredients","ingredientIds","getOrderIngredientRequest","method","JSON","stringify","headers","getInitialOrder","ConstructorItem","index","useDispatch","useDrop","accept","getHandlerId","hover","debounce","dragIndex","hoverIndex","onHover","handlerId","drop","drag","opacity","middleItemsList","style","isLocked","thumbnail","handleClose","itemId","removeIngredient","setCookie","seconds","expires","date","Date","setTime","getTime","toUTCString","cookie","getCookie","nameEQ","ca","split","i","c","charAt","substring","indexOf","BurgerConstructor","history","useHistory","nonBunIngredientsList","sum","setSum","bun","bunItem","setBunItem","items","dropTarget","onDropHandler","pricesList","Number","num","reduce","a","b","total","push","AuthExtra","extra","option","route","linkText","AuthForm","main","form","onSubmit","preventDefault","SET_USER_DATA","REMOVE_USER","getRegisterProfile","userData","getRegisterProfileRequest","getRegisterUserData","getRegisterProfileSuccess","user","refreshToken","accessToken","getLogin","getLoginRequest","getLoginUserData","getLoginSuccess","reorderPasswordRequest","email","reorderPassword","getReorderPassword","LogOut","token","getLogOut","initialUserData","getUserDataRequest","getUserData","getUpdateUserData","getUpdateUserDataRequest","updateUserData","getUpdateUserDataSuccess","Entrance","setEmail","password","setPassword","from","onChange","button","Registration","setName","sessionStorage","setItem","replace","placeholder","error","errorText","ForgotPassword","fromRecovery","NotFoundPage","withRouter","emailCode","setEmailCode","ProfileNavigation","navContainer","linksList","finally","removeItem","paragraph","UserProfile","userReducer","targetName","setTargetName","targetEmail","setTargetEmail","targetPassword","setTargetPassword","setUserForm","mainContainer","formContainer","OrderFeed","ProtectedRoute","rest","render","NonLoginRoute","App","action","isIngredientDetailsOpen","goBack","app","path","exact","DndProvider","backend","HTML5Backend","bar","ingredient","uuidv4","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","changeOrder","arr","dragItem","resultWithoutOldItem","arr1","splice","arr2","removeFromArray","newItem","slice","insertToArr","initialState","dragContainer","loader","itemsRequest","rootReducer","combineReducers","isBun","Boolean","prevValue","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","StrictMode","store"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,IAAM,wBAAwB,KAAO,yBAAyB,OAAS,2BAA2B,OAAS,2BAA2B,KAAO,yBAAyB,QAAU,4BAA4B,WAAa,iC,mBCA3OD,EAAOC,QAAU,CAAC,KAAO,iCAAiC,OAAS,mCAAmC,YAAc,wCAAwC,UAAY,sCAAsC,IAAM,gCAAgC,IAAM,gCAAgC,IAAM,gCAAgC,KAAO,mC,mBCAvUD,EAAOC,QAAU,CAAC,IAAM,gCAAgC,MAAQ,kCAAkC,UAAY,sCAAsC,MAAQ,kCAAkC,WAAa,uCAAuC,KAAO,iCAAiC,QAAU,oCAAoC,QAAU,sC,sNC+HrUC,EAA+CC,I,OC7E7CC,MA7Cf,SAAoBC,GAEhB,MAA0CH,GAAY,qBAAEI,sBAAjDC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,uBAEhB,EAA4BC,YAAQ,CAChCC,KAAM,OACNC,KAAMN,EACNO,QAAS,SAAAC,GAAO,MAAK,CACjBC,OAAQD,EAAQE,iBAJxB,mBAAiBC,GAAjB,KAAQF,OAAR,MAgBA,OACI,yBACIG,QAVR,WACIZ,EAAMa,YAAYb,IAUdc,IAAKH,EAFT,SAII,sBAAKI,UAAWC,IAAOC,IAAvB,UACI,sBAAKF,UAAWC,IAAOE,QAAvB,UACI,qBAAKH,UAAWC,IAAOG,MAAOC,IAAKpB,EAAMqB,IAAKC,IAAKtB,EAAMuB,OACxDrB,EAAQF,EAAMwB,KAAO,GAAoB,QAAfxB,EAAMK,MAC/B,cAAC,UAAD,CAASoB,MAAOvB,EAAQF,EAAMwB,KAAME,KAAK,YAb3D,SAAoBvB,GAChB,OAAmG,IAA5FA,EAAuBwB,WAAU,SAACC,GAAD,MAAsB,QAAbA,EAAIvB,MAAkBuB,EAAIJ,MAAQxB,EAAMwB,OAc5EK,CAAW1B,IACX,cAAC,UAAD,CAASsB,MAAO,EAAGC,KAAK,eAG7B,qBAAIX,UAAWC,IAAOc,MAAtB,UACI,mBAAGf,UAAWC,IAAOe,OAArB,SAA8B/B,EAAM8B,QACpC,cAAC,eAAD,CAAczB,KAAK,eAEvB,oBAAIU,UAAWC,IAAOO,KAAtB,SAA6BvB,EAAMuB,a,eC0HpCS,MA/Jf,SAA2BhC,GACvB,IAAIiC,EAAWC,cAERC,EAAetC,GAAY,qBAAEI,sBAA7BkC,YACDC,EAAaC,iBAA2B,MACxCC,EAAeD,iBAA2B,MAC1CE,EAAcF,iBAA2B,MAE/C,EAA8BG,IAAMC,SAAiB,OAArD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BH,IAAMC,SAAkC,IAAtE,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCL,IAAMC,SAAkC,IAA1E,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAgCP,IAAMC,SAAkC,IAAxE,mBAAOO,EAAP,KAAiBC,EAAjB,KA0BA,SAASpC,EAAYP,GACjBN,EAAMkD,kBAAkB5C,GAG5B,OA5BA6C,qBAAU,WACNN,EAAWV,EAAYiB,QAAO,SAAC9C,GAAD,MAAwB,QAAdA,EAAKD,SAC7C0C,EAAaZ,EAAYiB,QAAO,SAAC9C,GAAD,MAAwB,UAAdA,EAAKD,SAC/C4C,EAAYd,EAAYiB,QAAO,SAAC9C,GAAD,MAAwB,SAAdA,EAAKD,WAC/C,CAAC8B,IAyBA,sBAAKpB,UAAWC,IAAOqC,KAAvB,UACI,qBAAKtC,UAAWC,IAAOsC,OAAvB,SACI,oBAAIvC,UAAU,4BAAd,qGAEJ,sBAAKA,UAAWC,IAAOuC,IAAvB,UACI,cAAC,MAAD,CAAKC,MAAM,MAAMC,OAAoB,QAAZf,EAAmB9B,QAAS,SAAA4C,GACjDb,EAAWa,GACNpB,GAAeA,EAAWM,SAC/BN,EAAWM,QAAQgB,eAAe,CAACC,SAAU,YAHjD,4CAOA,cAAC,MAAD,CAAKH,MAAM,MAAMC,OAAoB,QAAZf,EAAmB9B,QAAS,SAAA4C,GACjDb,EAAWa,GACNlB,GAAiBA,EAAaI,SACnCJ,EAAaI,QAAQgB,eAAe,CAACC,SAAU,YAHnD,4CAQA,cAAC,MAAD,CAAKH,MAAM,QAAQC,OAAoB,UAAZf,EAAqB9B,QAAS,SAAA4C,GACrDb,EAAWa,GACNjB,GAAgBA,EAAYG,SACjCH,EAAYG,QAAQgB,eAAe,CAACC,SAAU,YAHlD,2DASJ,sBAAK5C,UAAWC,IAAOmB,YAClByB,SArDb,SAAkBC,GACd,IACMC,EADiBD,EAAME,OACIC,UAEjC,GAAK1B,GAAiBA,EAAaI,SAC9BH,GAAgBA,EAAYG,QAAjC,CAEA,IAAMuB,EAAgB3B,EAAaI,QAAQwB,UACrCC,EAAe5B,EAAYG,QAAQwB,UAErCvB,EADAmB,EAAiB,KAAOG,EACb,MACJH,EAAiB,KAAOK,EACpB,MAEA,WAsCX,UAGI,0BACIrD,IAAKsB,EADT,UAGI,oBAAIrB,UAAWC,IAAOoD,IAAtB,8CACA,qBAAKrD,UAAWC,IAAOqD,UAAvB,SACKzB,EAAQ0B,KAAI,SAAChE,GACV,OACI,cAAC,IAAD,CACIS,UAAWC,IAAOuD,KAElBC,GAAI,CACAC,SAAS,eAAD,OAAiBnE,EAAKkB,KAC9BkD,MAAO,CAAEC,WAAY1C,IAL7B,SAQA,wBAAC,EAAD,2BAAgB3B,GAAhB,IACgBsE,IAAKtE,EAAKkB,IACVH,IAAKf,EAAKa,MACVW,MAAOxB,EAAKwB,MACZP,KAAMjB,EAAKiB,KACXV,YAAaA,MAXpBP,EAAKkB,aAiB9B,0BACIV,IAAKwB,EADT,UAGI,oBAAIvB,UAAWC,IAAOoD,IAAtB,4CACA,qBAAKrD,UAAWC,IAAOqD,UAAvB,SACKvB,EAAUwB,KAAI,SAAChE,GACZ,OACI,cAAC,IAAD,CACIS,UAAWC,IAAOuD,KAElBC,GAAI,CACAC,SAAS,gBAAD,OAAkBnE,EAAKkB,KAC/BkD,MAAO,CAAEC,WAAY1C,IAL7B,SAQA,wBAAC,EAAD,2BAAgB3B,GAAhB,IACgBO,YAAaA,EACb+D,IAAKtE,EAAKkB,IACVH,IAAKf,EAAKa,MACVW,MAAOxB,EAAKwB,MACZP,KAAMjB,EAAKiB,SAXlBjB,EAAKkB,aAiB9B,0BACIV,IAAKyB,EADT,UAGI,oBAAIxB,UAAWC,IAAOoD,IAAtB,wDACA,qBAAKrD,UAAWC,IAAOqD,UAAvB,SACKrB,EAASsB,KAAI,SAAChE,GACX,OACI,cAAC,IAAD,CACIS,UAAWC,IAAOuD,KAElBC,GAAI,CACAC,SAAS,eAAD,OAAiBnE,EAAKkB,KAC9BkD,MAAO,CAAEC,WAAY1C,IAL7B,SAQA,wBAAC,EAAD,2BAAgB3B,GAAhB,IACgBsE,IAAKtE,EAAKkB,IACVH,IAAKf,EAAKa,MACVW,MAAOxB,EAAKwB,MACZP,KAAMjB,EAAKiB,KACXV,YAAaA,MAXpBP,EAAKkB,oB,iBChH/BqD,MAzBf,WAEI,MAAwChF,GAAY,qBAAEI,sBAA/C6E,EAAP,EAAOA,iBAAkB3C,EAAzB,EAAyBA,YACnB4C,EAAOC,cAAPD,GACAE,EAAkD,IAAzCC,OAAOC,KAAKL,GAAkBM,OAAejD,EAAYkD,MAAK,SAACzD,GAAD,OAASA,EAAIJ,MAAQuD,KAAMD,EACxG,OACI,qBAAK/D,UAAWC,IAAOC,IAAvB,SACI,sBAAKF,UAAWC,IAAOqD,UAAvB,UACI,qBAAKtD,UAAWC,IAAOG,MAAOC,IAAG,OAAE6D,QAAF,IAAEA,OAAF,EAAEA,EAAQ9D,MAAOG,IAAK,SACvD,oBAAIP,UAAWC,IAAOsE,WAAtB,gBAAmCL,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAQ1D,OAC3C,sBAAKR,UAAWC,IAAOuE,KAAvB,UACI,oBAAIxE,UAAWC,IAAOwE,QAAtB,iFACA,oBAAIzE,UAAWC,IAAOwE,QAAtB,oDACA,oBAAIzE,UAAWC,IAAOwE,QAAtB,8CACA,oBAAIzE,UAAWC,IAAOwE,QAAtB,sEACA,mBAAGzE,UAAWC,IAAOyE,QAArB,gBAA+BR,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAQS,WACvC,mBAAG3E,UAAWC,IAAOyE,QAArB,gBAA+BR,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAQU,WACvC,mBAAG5E,UAAWC,IAAOyE,QAArB,gBAA+BR,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAQW,MACvC,mBAAG7E,UAAWC,IAAOyE,QAArB,gBAA+BR,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAQY,yBCxB5C,MAA0B,uC,kCCoB1BC,MAhBf,SAAsB9F,GAClB,IAAM+F,EAAa/F,EAAM+F,WAMzB,OACI,qBAAKhF,UAAWf,EAAMgG,OAAN,UAAkBhF,IAAOiF,WAAzB,YAAuCjF,IAAOkF,SAAYlF,IAAOkF,QAC5EtF,QANT,SAAyBuF,GAChBA,EAAIpC,OAA0BqC,UAAUC,SAASrF,IAAOkF,UAAUH,KAIvE,SAGK/F,EAAMsG,YCqBJC,MA5Bf,SAAevG,GAEX,IAAMwG,EAAYC,SAASC,eAAe,cAY1C,OAVAvD,qBAAU,WACN,IAAMwD,EAAgB,SAACC,GACL,WAAVA,EAAEhC,KACF5E,EAAM+F,cAId,OADAU,SAASI,iBAAiB,UAAWF,GAC9B,kBAAMF,SAASK,oBAAoB,UAAWH,MACvD,IAEKI,IAASC,aAER,cAAC,EAAD,2BAAkBhH,GAAlB,aACI,sBAAKe,UAAWC,IAAOC,IAAvB,UACI,sBAAKF,UAAWC,IAAOiG,IAAvB,UACI,oBAAIlG,UAAWC,IAAOkG,MAAtB,SAA8BlH,EAAMkH,QACpC,cAAC,YAAD,CAAW7G,KAAK,UAAUO,QAASZ,EAAM+F,gBAE5C/F,EAAMsG,eAGhBE,ICTIW,MAjBf,SAAsBnH,GAClB,MAAoCH,GAAY,qBAAEI,sBAA3CmH,EAAP,EAAOA,MAAOC,EAAd,EAAcA,mBACd,OACI,eAAC,EAAD,CACItB,WAAY/F,EAAM+F,WAClBC,OAAQqB,EAFZ,UAII,mBAAGtG,UAAU,8BAAb,SAA4CqG,IAC5C,oBAAIrG,UAAWC,IAAOkG,MAAtB,iIACA,qBAAK9F,IAAKkG,EAASvG,UAAWC,IAAOG,MAAOG,IAAK,SACjD,oBAAIP,UAAWC,IAAOuG,YAAtB,qJACA,oBAAIxG,UAAWC,IAAOwG,QAAtB,gQ,iBCoBGC,MAjCf,WAEI,OACI,8BACI,sBAAK1G,UAAWC,IAAOsC,OAAvB,UACI,sBAAKvC,UAAWC,IAAO0G,OAAvB,UACI,qBAAK3G,UAAWC,IAAOiG,IAAvB,SACI,eAAC,IAAD,CAASlG,UAAWC,IAAO2G,QAASnD,GAAI,IAAKoD,gBAAiB5G,IAAO6G,WAArE,UACI,cAAC,aAAD,CAAYxH,KAAK,YACjB,mBAAGU,UAAS,sCAAiCC,IAAO8G,MAApD,qFAIR,qBAAK/G,UAAWC,IAAOiG,IAAvB,SACI,eAAC,IAAD,CAASlG,UAAWC,IAAO2G,QAASnD,GAAI,SAAUoD,gBAAiB5G,IAAO6G,WAA1E,UACI,cAAC,WAAD,CAAUxH,KAAK,YACf,mBAAGU,UAAS,sCAAiCC,IAAO8G,MAApD,+FAKZ,qBAAK/G,UAAWC,IAAO+G,KAAvB,SACI,cAAC,OAAD,MAEJ,eAAC,IAAD,CAAShH,UAAWC,IAAO2G,QAASnD,GAAI,WAAYoD,gBAAiB5G,IAAO6G,WAA5E,UACI,cAAC,cAAD,CAAaxH,KAAK,YAClB,sBAAMU,UAAS,sCAAiCC,IAAO8G,MAAvD,sG,0BC/BL,MAA0B,kCCE5BE,EAAW,yCAClBC,EAAiB,SAACC,GACpB,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAR,iBAAyBJ,EAAIK,UCOrC,IAAMC,EAAqD,0BACrDC,EAAqD,0BACrDC,EAAmD,yBACnDC,EAAiE,gCACjEC,EAAiE,gCACjEC,EAA+D,+BAC/DC,EAAiE,gCACjEC,EAAqE,kCACrEC,EAA2E,qCAC3EC,EAAqC,kBACrCC,GAAuC,mBACvCC,GAAuC,mBACvCC,GAAqD,0BACrDC,GAA6B,cAC7BC,GAA6C,sBA2G7CC,GAA2B,kBAAM,SAACC,GAE3CA,EAfsD,CACtDnJ,KAAMmI,ID9GCiB,MAAM,GAAD,OAAIzB,EAAJ,gBACP0B,KAAKzB,GC4HWyB,MAAK,SAAAxB,GAZD,IAAC/F,EAalB+F,GAAOA,EAAIyB,QACXH,GAdkBrH,EAeO+F,EAAI0B,KAfgD,CACrFvJ,KAAMoI,EACNtG,iBAiBQqH,EAd4C,CACpDnJ,KAAMqI,OAgBDmB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,QAgBjCG,GAAgC,SAACC,GAAD,OAAkC,SAACV,GAE5EA,EAd8B,SAACU,GAAD,MAA8D,CAC5F7J,KAAMsI,EACNuB,iBAYSC,CAA0BD,IDrJhC,SAAyBA,GAC5B,OAAOT,MAAM,GAAD,OAAIzB,EAAJ,UAAsB,CAC9BoC,OAAQ,OACR/G,KAAMgH,KAAKC,UAAU,CAACnI,YAAa+H,IACnCK,QAAS,CACL,eAAgB,sBAGnBb,KAAKzB,GC8IVuC,CAAgBN,GAAeR,MAAK,SAAAxB,GAXN,IAACd,EAYvBc,GAAOA,EAAIyB,QACXH,GAbuBpC,EAaYc,EAAId,MAAMrF,OAbwB,CAC7E1B,KAAMuI,EACNxB,WAcQoC,EAZsD,CAC9DnJ,KAAMwI,OAcDgB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,Q,UC9J/B,SAASW,GAAgBzK,GACpC,IAAMc,EAAMuB,iBAA2B,MACjCqI,EAAQ1K,EAAM0K,MACd3F,EAAK/E,EAAMwB,IACXgI,EAAWmB,cAejB,MAAiCC,YAAQ,CACrCC,OAAQ,UACRtK,QAFqC,SAE7BC,GACJ,MAAO,CACHC,OAAQD,EAAQsK,iBAGxBC,MAAOC,qBAAS,SAAC1K,EAAwBE,GAAzB,OApBpB,SAAiBF,EAAwBE,GACrC,IAAMyK,EAAY3K,EAAKoK,MACjBQ,EAAalL,EAAM0K,MACrBO,IAAcC,IAGlB1B,EAAS,CAACnJ,KAAMiJ,GAAqB2B,YAAWC,eAChD5K,EAAKoK,MAAQQ,EACb1B,EAAS,CACLnJ,KAAM+I,MAW8D+B,CAAQ7K,KAAgB,OAPpG,mBAAQ8K,EAAR,KAAQA,UAAYC,EAApB,KASA,EAA6BjL,YAAQ,CACjCC,KAAM,UACNC,KAAM,WACF,MAAO,CAACyE,KAAI2F,UAEhBnK,QAAS,SAACC,GACN,MAAQ,CACJE,WAAYF,EAAQE,iBAPhC,mBAAQA,EAAR,KAAQA,YA0BR4K,EA1BA,MA0BKD,EAAKvK,IACV,IAAMyK,EAAU7K,EAAa,EAAI,EACjC,OACI,sBACIK,UAAWC,IAAOwK,gBAClB1K,IAAKA,EACL,kBAAiBsK,EACjBK,MAAO,CAACF,WAJZ,UAMI,cAAC,WAAD,CAAUlL,KAAK,YACf,cAAC,qBAAD,CACIqL,UAAU,EACV5D,KAAM9H,EAAMuB,KACZO,MAAO9B,EAAM8B,MACb6J,UAAW3L,EAAMmB,MACjByK,YAAa,kBA7BzB,SAA0B7G,EAAY2F,GAClClB,EAAS,CACLnJ,KAAM2I,EACNxF,MAAO,CAACuB,KAAI2F,WAEhBlB,EAAS,CACLnJ,KAAM+I,KAEVI,EAAS,CACLnJ,KAAM8I,GACN0C,OAAQ9G,IAmBe+G,CAAiB9L,EAAMwB,IAAKxB,EAAM0K,aCpF9D,SAASqB,GAAUxK,EAAciC,EAAewI,GACnD,IAAIC,EAAU,GACd,GAAID,EAAS,CACT,IAAME,EAAO,IAAIC,KACjBD,EAAKE,QAAQF,EAAKG,UAAuB,IAAVL,GAC/BC,EAAU,aAAeC,EAAKI,cAElC7F,SAAS8F,OAAShL,EAAO,KAAOiC,GAAS,IAAMyI,EAAU,WAGtD,SAASO,GAAUjL,GAGtB,IAFA,IAAMkL,EAASlL,EAAO,IAChBmL,EAAKjG,SAAS8F,OAAOI,MAAM,KACxBC,EAAI,EAAGA,EAAIF,EAAGtH,OAAQwH,IAAK,CAEhC,IADA,IAAIC,EAAIH,EAAGE,GACY,MAAhBC,EAAEC,OAAO,IAAYD,EAAIA,EAAEE,UAAU,EAAGF,EAAEzH,QACjD,GAA0B,IAAtByH,EAAEG,QAAQP,GAAe,OAAOI,EAAEE,UAAUN,EAAOrH,OAAQyH,EAAEzH,QAErE,OAAO,KCuFI6H,OA5Ff,SAA2BjN,GACzB,IAAMkN,EAAUC,cACd,EAGItN,GAAY,qBAAEI,sBAFdE,EADJ,EACIA,uBACAiN,EAFJ,EAEIA,sBAEE5D,EAAWmB,cAEjB,EAAsBlI,mBAAS,GAA/B,mBAAO4K,EAAP,KAAYC,EAAZ,KACA,EAA8B9K,IAAMC,SAAS,CAAClB,KAAM,UAAWJ,MAAOoM,EAAKzL,MAAO,IAAlF,mBAAO0L,EAAP,KAAgBC,EAAhB,KAEAtK,qBAAU,WACNqG,EAAS,CACLnJ,KAAM0I,EACN2E,MAAOvN,EAAuBiD,QAAO,SAAC9C,GAAD,MAAwB,UAAdA,EAAKD,MAAkC,SAAdC,EAAKD,UAEjF,IAAMkN,EAAMpN,EAAuBkF,MAAK,SAAC/E,GAAD,MAAwB,QAAdA,EAAKD,QACnDkN,GAAKE,EAAWF,KACrB,CAACpN,EAAwBqJ,IAE5B,MAAuBoB,YAAQ,CAC3BC,OAAQ,OACRQ,KAF2B,SAEtBsC,GACF3N,EAAM4N,cAAcD,GACK,QAApBA,EAAWtN,MACXoN,EAAWE,MALdA,EAAT,oBA2BA,OAPAxK,qBAAU,WACN,IAAM0K,EAAaT,EAAsB9I,KAAI,SAAChE,GAAD,OAAUwN,OAAOxN,EAAKwB,UAC/DiM,EAAMP,EAAQ1L,MAClBwL,EAAOO,EAAWG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAGH,MAC3C,CAAC5N,EAAwBiN,EAAuBI,IAI/C,sBAAKzM,UAAWC,IAAOC,IAClBH,IAAK6M,EADV,UAGI,yBAAS5M,UAAWC,IAAOoB,WAA3B,SACI,cAAC,qBAAD,CACI/B,KAAK,MACLqL,UAAU,EACV5D,KAAM0F,EAAQjM,KAAO,6BACrBO,MAAO0L,EAAQ1L,MACf6J,UAAW6B,EAAQrM,UAG3B,qBAAKJ,UAAWC,IAAOqD,UAAvB,SACK+I,EAAsB9I,KAAI,SAAChE,EAAMoK,GAC9B,OACI,cAACD,GAAD,2BAAqBnK,GAArB,IAA2BoK,MAAOA,UAI9C,yBAAS3J,UAAWC,IAAOoB,WAA3B,SACI,cAAC,qBAAD,CACI/B,KAAK,SACLqL,UAAU,EACV5D,KAAM0F,EAAQjM,KAAO,uBACrBO,MAAO0L,EAAQ1L,MACf6J,UAAW6B,EAAQrM,UAG3B,sBAAKJ,UAAWC,IAAOmN,MAAvB,UACI,oBAAIpN,UAAWC,IAAOqM,IAAtB,SAA4BA,IAC5B,cAAC,eAAD,CAAchN,KAAK,YACnB,wBACIU,UAAWC,IAAOiG,IAClBrG,QAnDhB,WACkB4L,GAAU,eAKxBhD,EAASS,GAAoB9J,EAAuBmE,KAAI,SAAChE,GAAD,OAAUA,EAAKkB,SAHpE0L,EAAQkB,KAAM,WA8CT,oG,sECxFT,SAASC,GAAUrO,GACtB,OACI,sBAAKe,UAAWC,KAAOsN,MAAvB,UACI,oBAAIvN,UAAWC,KAAOuN,OAAtB,SAA+BvO,EAAM8H,OACrC,cAAC,IAAD,CAAM/G,UAAWC,KAAOuD,KAAMC,GAAIxE,EAAMwO,MAAxC,SAAgDxO,EAAMyO,cCJ3D,SAASC,GAAS1O,GAQrB,OACI,qBAAKe,UAAWC,KAAO2N,KAAvB,SACI,sBAAK5N,UAAWC,KAAOqD,UAAvB,UACI,qBAAItD,UAAWC,KAAOkG,MAAtB,cAA+BlH,EAAMkH,MAArC,OACA,sBAAMnG,UAAWC,KAAO4N,KAAMC,SAV1C,SAAkBjI,GACT5G,EAAM6O,WACXjI,EAAEkI,iBACF9O,EAAM6O,aAOE,SACK7O,EAAMsG,WAEX,cAAC+H,GAAD,CAAWvG,KAAM9H,EAAM8H,KACZvD,KAAMvE,EAAMuE,KACZkK,SAAUzO,EAAMyO,SAChBD,MAAOxO,EAAMwO,aCVjC,IAAMO,GAAiC,gBAYjCC,GAA6B,cA8D7BC,GAA+B,SAACC,GAAD,OAAiC,SAAC1F,GAE1E,OADAA,EAd8B,SAAC0F,GAAD,MAA6D,CAC3F7O,KArBwE,+BAsBxE6O,YAYSC,CAA0BD,IP1ChC,SAA6BA,GAChC,OAAOzF,MAAM,GAAD,OAAIzB,EAAJ,iBAA6B,CACrCoC,OAAQ,OACR/G,KAAMgH,KAAKC,UAAU4E,GACrB3E,QAAS,CACL,eAAgB,sBAGnBb,KAAKzB,GOmCHmH,CAAoBF,GACtBxF,MAAK,SAACxB,GAUH,OATIA,GAAOA,EAAIyB,QACXH,EAdkB,SAAC0F,GAAD,MAAqD,CACnF7O,KAxBwE,+BAyBxE6O,YAYqBG,CAA0B,CAC/BC,KAAMpH,EAAIoH,KACVC,aAAcrH,EAAIqH,aAClBC,YAAatH,EAAIsH,eAGrBhG,EAhBkD,CAC9DnJ,KA3BsE,gCA4CvD6H,KAEV2B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,QAmCjC2F,GAAqB,SAACP,GAAD,OAA8B,SAAC1F,GAE7D,OADAA,EAboB,SAAC0F,GAAD,MAAgD,CACpE7O,KArBkD,oBAsBlD6O,YAWSQ,CAAgBR,IPjFtB,SAA0BA,GAC7B,OAAOzF,MAAM,GAAD,OAAIzB,EAAJ,cAA0B,CAClCoC,OAAQ,OACR/G,KAAMgH,KAAKC,UAAU4E,GACrB3E,QAAS,CACL,eAAgB,sBAGnBb,KAAKzB,GO0EH0H,CAAiBT,GACnBxF,MAAK,SAACxB,GAUH,OATIA,GAAOA,EAAIyB,QACXH,EAbQ,SAAC0F,GAAD,MAA2C,CAC/D7O,KAxBkD,oBAyBlD6O,YAWqBU,CAAgB,CACrBN,KAAMpH,EAAIoH,KACVC,aAAcrH,EAAIqH,aAClBC,YAAatH,EAAIsH,eAGrBhG,EAf8B,CAC1CnJ,KA3BgD,qBA2CjC6H,KAEV2B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,QAuBxC+F,GAAyB,SAACC,GAAD,MAA4C,CACvEzP,KApBgE,2BAqBhEyP,UAUSC,GAA4B,SAACD,GAAD,OAAmB,SAACtG,GAEzD,OADAA,EAASqG,GAAuBC,IPjK7B,SAA4BA,GAC/B,OAAOrG,MAAM,GAAD,OAAIzB,EAAJ,kBAA8B,CACtCoC,OAAQ,OACR/G,KAAMgH,KAAKC,UAAU,CAACwF,UACtBvF,QAAS,CACL,eAAgB,sBAGnBb,KAAKzB,GO0JH+H,CAAmBF,GACrBpG,MAAK,SAACxB,GAMH,OALIA,GAAOA,EAAIyB,QACXH,EAb8C,CAC1DnJ,KAvBgE,6BAqCpDmJ,EAX4C,CACxDnJ,KA1B8D,4BAsC/C6H,KAEV2B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,QAmCjCmG,GAAmB,SAACC,GAAD,OAAmB,SAAC1G,GAEhD,OADAA,EAASqG,GAAuBK,IPtK7B,SAAmBA,GACtB,OAAOzG,MAAM,GAAD,OAAIzB,EAAJ,eAA2B,CACnCoC,OAAQ,OACR/G,KAAMgH,KAAKC,UAAU,CAAC4F,UACtB3F,QAAS,CACL,eAAgB,sBAGnBb,KAAKzB,GO+JHkI,CAAUD,GACZxG,MAAK,SAACxB,GAMH,OALIA,GAAOA,EAAIyB,QACXH,EA3D8C,CAC1DnJ,KAvBgE,6BAmFpDmJ,EAzD4C,CACxDnJ,KA1B8D,4BAoF/C6H,KAEV2B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,QAqCjCsG,GAA4B,SAACZ,GAAD,OAAyB,SAAChG,GAE/D,OADAA,EAduB,SAACgG,GAAD,MAA8C,CACrEnP,KArB0D,wBAsB1DmP,eAYSa,CAAmBb,IP/LzB,SAAqBA,GACxB,OAAO/F,MAAM,GAAD,OAAIzB,EAAJ,aAAyB,CACjCoC,OAAQ,MACRG,QAAS,CACL,eAAgB,mBAChB,cAAiBiF,KAGpB9F,KAAKzB,GOwLHqI,CAAYd,GACd9F,MAAK,SAACxB,GAWH,OAVIA,GAAOA,EAAIyB,QACXH,EAdqD,CACjEnJ,KAxB0D,wBAyB1DiP,KAYwC,CACxBA,KAAMpH,EAAIoH,KACVC,aAAcrH,EAAIqH,aAClBC,YAAatH,EAAIsH,eAIrBhG,EAhBoC,CAChDnJ,KA5BwD,yBA6CzC6H,KAEV2B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,QAsCjCyG,GAA8B,SAACf,EAAqBF,GAAtB,OAAkD,SAAC9F,GAE1F,OADAA,EAf6B,SAACgG,EAAqBF,GAAtB,MAA6E,CAC1GjP,KAtBwE,+BAuBxEmP,cACAF,QAYSkB,CAAyBhB,EAAaF,IPjQ5C,SAAwBE,EAAqBF,GAChD,OAAO7F,MAAM,GAAD,OAAIzB,EAAJ,aAAyB,CACjCoC,OAAQ,QACR/G,KAAMgH,KAAKC,UAAUgF,GACrB/E,QAAS,CACL,eAAgB,mBAChB,cAAiBiF,KAGpB9F,KAAKzB,GOyPHwI,CAAejB,EAAaF,GAC9B5F,MAAK,SAACxB,GAWH,OAVIA,GAAOA,EAAIyB,QACXH,EAdiB,SAAC8F,GAAD,MAAgD,CAC7EjP,KA1BwE,+BA2BxEiP,QAYqBoB,CAAyB,CAC9BpB,KAAMpH,EAAIoH,KACVC,aAAcrH,EAAIqH,aAClBC,YAAatH,EAAIsH,eAIrBhG,EAhBgD,CAC5DnJ,KA9BsE,gCA+CvD6H,KAEV2B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,QC/R/B6G,OAnDf,WACI,IAAMnH,EAAWmB,cACjB,EAA0BlI,mBAAS,mBAAnC,mBAAOqN,EAAP,KAAcc,EAAd,KACA,EAAgCnO,mBAAS,YAAzC,mBAAOoO,EAAP,KAAiBC,EAAjB,KAOM5D,EAAUC,cACVlL,EAAWC,cAejB,OACI,sBAAKnB,UAAWC,KAAOqD,UAAvB,UACI,eAACqK,GAAD,CACIG,SAhBZ,WACKrF,EAASiG,GAAS,CAACK,QAAOe,cACtBnH,MAAK,SAACxB,GAGC,OADA6D,GAAU,cAAe7D,EAAIsH,YADb,MAETtH,KAGdwB,MAAK,SAACxB,GAAgC,IAAD,EAClCgF,EAAQkB,KAAKlG,EAAIsH,YAAJ,UAAmBvN,EAAiByC,aAApC,aAAkB,EAAyBqM,KAAKtM,SAAW,SAQxEyC,MAAO,2BACPY,KAAM,+HACNvD,KAAM,GACNkK,SAAU,+GACVD,MAAO,YANX,UAQI,qBAAKzN,UAAWC,KAAOC,IAAvB,SACI,cAAC,aAAD,CAAY+P,SAjCN,SAACpK,GACnBgK,EAAShK,EAAE7C,OAAOP,QAgC+BA,MAAOsM,EAAOvO,KAAM,YAE7D,qBAAKR,UAAWC,KAAOC,IAAvB,SACI,cAAC,gBAAD,CAAe+P,SAjCN,SAACpK,GACtBkK,EAAYlK,EAAE7C,OAAOP,QAgCkCA,MAAOqN,EAAUtP,KAAM,eAEtE,qBAAKR,UAAWC,KAAOiQ,OAAvB,SACI,cAAC,SAAD,CAAQ5Q,KAAK,UAAUqB,KAAK,QAA5B,SAAqC,wCAG7C,cAAC2M,GAAD,CAAWvG,KAAM,6EAAkBvD,KAAM,GAAIkK,SAAU,gHAAuBD,MAAO,yB,oBCalF0C,OA5Df,WACI,MAAwBzO,mBAAS,IAAjC,mBAAOlB,EAAP,KAAa4P,EAAb,KAIA,EAA0B1O,mBAAS,IAAnC,mBAAOqN,EAAP,KAAcc,EAAd,KACA,EAAgCnO,mBAAS,IAAzC,mBAAOoO,EAAP,KAAiBC,EAAjB,KAOMtH,EAAWmB,cACXuC,EAAUC,cAYhB,OACI,eAACuB,GAAD,CACIG,SAZR,WACKrF,EAASyF,GAAmB,CAACa,QAAOe,WAAUtP,UAC1CmI,MAAK,SAACxB,GACHkJ,eAAeC,QAAQ,eAAgBnJ,EAAIqH,cAE3CxD,GAAU,cAAe7D,EAAIsH,YADb,SAGnB9F,MAAK,kBAAMwD,EAAQoE,QAAQ,CAAC7M,SAAU,UAMvCyC,MAAO,qEACPY,KAAM,uHACNvD,KAAM,GACNkK,SAAU,iCACVD,MAAO,SANX,UAQI,qBAAKzN,UAAWC,KAAOC,IAAvB,SACI,cAAC,QAAD,CACIZ,KAAM,OACN2Q,SApCK,SAACpK,GAClBuK,EAAQvK,EAAE7C,OAAOP,QAoCL+N,YAAa,qBACb/N,MAAOjC,EACPA,KAAM,OACNiQ,OAAO,EACPC,UAAW,uCACX/P,KAAM,cAGd,qBAAKX,UAAWC,KAAOC,IAAvB,SACI,cAAC,aAAD,CAAY+P,SAzCF,SAACpK,GACnBgK,EAAShK,EAAE7C,OAAOP,QAwC2BA,MAAOsM,EAAOvO,KAAM,YAE7D,qBAAKR,UAAWC,KAAOC,IAAvB,SACI,cAAC,gBAAD,CAAe+P,SAzCF,SAACpK,GACtBkK,EAAYlK,EAAE7C,OAAOP,QAwC8BA,MAAOqN,EAAUtP,KAAM,eAEtE,qBAAKR,UAAWC,KAAOiQ,OAAvB,SACI,cAAC,SAAD,CAAQ5Q,KAAK,UAAUqB,KAAK,QAA5B,SAAqC,uH,oBCxBtCgQ,OAhCf,WACI,MAA0BjP,mBAAS,mBAAnC,mBAAOqN,EAAP,KAAcc,EAAd,KACM1D,EAAUC,cAIV3D,EAAWmB,cAOjB,OACI,eAAC+D,GAAD,CACIxH,MAAO,4HACPY,KAAM,+FACNvD,KAAM,GACNkK,SAAU,iCACVD,MAAO,SACPK,SAZR,WACKrF,EAASuG,GAAgBD,IACrBpG,MAAK,kBAAMwD,EAAQkB,KAAK,CAAC3J,SAAU,qBAAsBC,MAAO,CAACiN,cAAc,SAIpF,UAQI,qBAAK5Q,UAAWC,KAAOC,IAAvB,SACI,cAAC,aAAD,CAAY+P,SApBF,SAACpK,GACnBgK,EAAShK,EAAE7C,OAAOP,QAmB2BA,MAAOsM,EAAOvO,KAAM,wDAE7D,qBAAKR,UAAWC,KAAOiQ,OAAvB,SACI,cAAC,SAAD,CAAQ5Q,KAAK,UAAUqB,KAAK,QAA5B,SAAqC,mF,oBCnCtC,OAA0B,kCCGlC,SAASkQ,KACZ,OACI,sBAAK7Q,UAAWC,KAAOC,IAAvB,UACI,oBAAIF,UAAWC,KAAO8G,KAAtB,6BACA,qBAAK1G,IAAKmM,GAAKjM,IAAI,sCC8ChBuQ,oBA9Cf,SAA0B7R,GAAiB,IAAD,EAEtC,EAAkCyC,mBAAS,IAA3C,mBAAOqP,EAAP,KAAkBC,EAAlB,KACA,EAAgCtP,mBAAS,IAAzC,mBAAOoO,EAAP,KAAiBC,EAAjB,KAQA,OAAI,UAAC9Q,EAAMiC,SAASyC,aAAhB,OAAC,EAAsBiN,aAKvB,eAACjD,GAAD,CACIxH,MAAO,4HACPY,KAAM,+FACNvD,KAAM,GACNkK,SAAU,iCACVD,MAAO,SALX,UAQI,qBAAKzN,UAAWC,KAAOC,IAAvB,SACI,cAAC,gBAAD,CAAe+P,SAlBF,SAACpK,GACtBkK,EAAYlK,EAAE7C,OAAOP,QAiB8BA,MAAOqN,EAAUtP,KAAM,eAEtE,qBAAKR,UAAWC,KAAOC,IAAvB,SACI,cAAC,QAAD,CACIZ,KAAM,OACN2Q,SA1BK,SAACpK,GAClBmL,EAAanL,EAAE7C,OAAOP,QA0BV+N,YAAa,kHACb/N,MAAOsO,EACPvQ,KAAM,OACNiQ,OAAO,EACPC,UAAW,uCACX/P,KAAM,cAGd,qBAAKX,UAAWC,KAAOiQ,OAAvB,SACI,cAAC,SAAD,CAAQ5Q,KAAK,UAAUqB,KAAK,QAA5B,SAAqC,gEA5BtC,cAACkQ,GAAD,O,wCCfF1C,GAAsB,CAC/BI,KAAM,CACFQ,MAAO,GACPvO,KAAM,IAEViO,YAAa,GACbD,aAAc,IC+BHyC,OAlCf,SAA2BhS,GACvB,IAAMkN,EAAUC,cACV3D,EAAWmB,cACXuF,EAAQ1D,GAAU,eAYxB,OACI,sBAAKzL,UAAWC,KAAOiR,aAAvB,UACI,sBAAKlR,UAAWC,KAAOkR,UAAvB,UACI,cAAC,IAAD,CAASnR,UAAWC,KAAOuD,KAAMC,GAAI,WAAYoD,gBAAiB5G,KAAO6G,WAAzE,wDAGA,cAAC,IAAD,CAAS9G,UAAWC,KAAOuD,KAAMC,GAAI,SAAUoD,gBAAiB5G,KAAO6G,WAAvE,mGAGA,wBAAQxH,KAAK,SAASU,UAAWC,KAAOuD,KAAM3D,QAnB1D,WACK4I,EAASyG,GAAOC,IACZxG,MAAK,kBAAMF,EAAS,CAACnJ,KAAM2O,GAAaE,iBACxCiD,SAAQ,WZMd,IAAqB5Q,EYLZ6P,eAAegB,WAAW,gBZKd7Q,EYJA,cZKxBkF,SAAS8F,OAAShL,EAAO,oDYJb2L,EAAQoE,QAAQ,CAAC7M,SAAU,eAa3B,+CAIJ,mBAAG1D,UAAWC,KAAOqR,UAArB,sUCsDGC,OA/Ef,WACI,IAAM9I,EAAWmB,cACV2E,EAAQzP,GAAY,qBAAE0S,eAAtBjD,KAGP,EAAoC7M,mBAAS6M,EAAK/N,MAAlD,mBAAOiR,EAAP,KAAmBC,EAAnB,KAIA,EAAsChQ,mBAAS6M,EAAKQ,OAApD,mBAAO4C,EAAP,KAAoBC,EAApB,KACA,EAA4ClQ,mBAAS,IAArD,mBAAOmQ,EAAP,KAAuBC,EAAvB,KA+BA,SAASC,EAAYxD,GACjBmD,EAAcnD,EAAK/N,MACnBoR,EAAerD,EAAKQ,OACpB+C,EAAkB,IAGtB,OA7BA1P,qBAAU,WACN,IAAM+M,EAAQ1D,GAAU,eACnB0D,GACJ1G,EAAS4G,GAAgBF,IACrBxG,MAAK,SAACxB,GACH4K,EAAY5K,EAAIoH,WAEzB,CAAC9F,IAuBA,sBAAKzI,UAAWC,KAAO+R,cAAvB,UACI,cAAC,GAAD,CAAmB1S,KAAM,YACzB,sBAAKU,UAAWC,KAAOgS,cAAvB,UACI,qBAAKjS,UAAWC,KAAOC,IAAvB,SACI,cAAC,QAAD,CACIZ,KAAM,OACN2Q,SAhDC,SAACpK,GAClB6L,EAAc7L,EAAE7C,OAAOP,QAgDP+N,YAAa,qBACb/N,MAAOgP,EACPjR,KAAM,OACNiQ,OAAO,EACPC,UAAW,uCACX/P,KAAM,cAGd,qBAAKX,UAAWC,KAAOC,IAAvB,SACI,cAAC,aAAD,CAAY+P,SArDN,SAACpK,GACnB+L,EAAe/L,EAAE7C,OAAOP,QAoDyBA,MAAOkP,EAAanR,KAAM,YAEnE,qBAAKR,UAAWC,KAAOC,IAAvB,SACI,cAAC,gBAAD,CAAe+P,SArDN,SAACpK,GACtBiM,EAAkBjM,EAAE7C,OAAOP,QAoD4BA,MAAOoP,EAAgBrR,KAAM,eAE5E,sBAAKR,UAAWC,KAAOiQ,OAAvB,UACI,cAAC,SAAD,CAAQ5Q,KAAK,YAAYqB,KAAK,SAA9B,SAAwC,yCACxC,cAAC,SAAD,CAAQrB,KAAK,UAAUqB,KAAK,QAAQd,QA5CpD,WACI,IAAMsP,EAAQ1D,GAAU,eACpB0D,GACC1G,EAAS+G,GAAkBL,EAAO,CAC/B3O,KAAMiR,EACN1C,MAAO4C,EACP7B,SAAU+B,KAETlJ,MAAK,SAACxB,GACH4K,EAAY5K,EAAIoH,UAmChB,SAA0D,qE,oBC/E/D,SAAS2D,KACpB,OACI,qBAAKlS,UAAWC,KAAOqD,UAAvB,SACI,oBAAItD,UAAWC,KAAO8G,KAAtB,2B,6BCDL,SAASoL,GAAT,GAAmE,IAA1C5M,EAAyC,EAAzCA,SAAa6M,EAA4B,mBAC/DjD,EAAQ1D,GAAU,eACxB,OACI,cAAC,IAAD,2BACQ2G,GADR,IAEIC,OAAQ,gBAAEnR,EAAF,EAAEA,SAAF,OACJiO,EACI5J,EAEA,cAAC,IAAD,CACI9B,GAAI,CACAC,SAAU,SACVC,MAAO,CAACqM,KAAM9O,U,oBCZnC,SAASoR,GAAT,GAAkE,IAA1C/M,EAAyC,EAAzCA,SAAa6M,EAA4B,mBAC9DjD,EAAQ1D,GAAU,eAExB,OACI,cAAC,IAAD,2BACQ2G,GADR,IAEIC,OAAQ,gBAAEnR,EAAF,EAAEA,SAAF,OACJiO,EACI,cAAC,IAAD,CACI1L,GAAI,CACAC,SAAU,IACVC,MAAO,CAACqM,KAAM9O,MAItBqE,MCsGLgN,OA1Ff,WACI,IAAIpG,EAAUC,cACVlL,EAAgBC,cAChByC,EACmB,SAAnBuI,EAAQqG,QAAqBtR,EAASyC,OAASzC,EAASyC,MAAMC,WAE5D6E,EAAWmB,cAiBjB,SAAS5E,IACLyD,EAAS,CAACnJ,KAAMgJ,KACZmK,GACAtG,EAAQuG,SAlBhBtQ,qBAAU,WACNqG,EAASD,QACV,CAACC,IAoBJ,IACIgK,EACA3T,GAAY,qBAAEI,sBADduT,wBAGJ,OACI,sBAAKzS,UAAWC,IAAO0S,IAAvB,UACI,cAAC,EAAD,IACA,eAAC,IAAD,CAAQzR,SAAU0C,GAAc1C,EAAhC,UACI,cAAC,IAAD,CAAO0R,KAAM,CAAC,IAAK,iBAAkBC,OAAO,EAA5C,SACI,cAACC,GAAA,EAAD,CAAaC,QAASC,KAAtB,SACI,sBAAKhT,UAAWC,IAAOgT,IAAvB,UACI,cAAC,EAAD,CACI9Q,kBA9B5B,SAA+B5C,GAC3BkJ,EAAS,CAACnJ,KAAM4I,EAAiBgL,WAAY3T,OA+BzB,cAAC,GAAD,CACIsN,cA5BT,SAACtN,GAChBkJ,EAAS,CAACnJ,KAAM6I,GAAkB2C,OAAQvL,EAAKkB,MAC/CgI,EAAS,CAACnJ,KAAMyI,EAA+BmL,WAAW,2BAAK3T,GAAN,IAAYsE,IAAKsP,6BA+BlE,cAACb,GAAD,CAAeM,KAAK,SAApB,SACI,cAAC,GAAD,MAEJ,cAACN,GAAD,CAAeM,KAAK,YAApB,SACI,cAAC,GAAD,MAEJ,cAACN,GAAD,CAAeM,KAAK,mBAApB,SACI,cAAC,GAAD,MAEJ,cAACN,GAAD,CAAeM,KAAK,qBAApB,SACI,cAAC,GAAD,MAEJ,cAACT,GAAD,CAAgBS,KAAK,WAArB,SACI,cAAC,GAAD,MAEJ,cAACT,GAAD,CAAgBS,KAAK,SAArB,SACI,cAACV,GAAD,MAEJ,cAAC,IAAD,CAAOU,KAAK,kBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,UACI,cAAC/B,GAAD,SAGPjN,GAAc,cAAC,IAAD,CAAOgP,KAAK,kBACLrN,SAAU,cAAC,EAAD,CAAOP,WAAYA,EACZmB,MAAO,0GACPlB,OAAQwN,EAFf,SAIN,cAAC,EAAD,QAG1B,cAAC,EAAD,CACIzN,WAAYA,QCrGboO,GAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqB3K,MAAK,YAAgD,IAA9C4K,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACxDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,qCCGb,SAASO,GAAYC,EAAiB3J,EAAmBC,GAE5D,IAAM2J,EAAWD,EAAI3J,GAEf6J,EAVH,SAAyBF,EAAiBlK,GAC7C,IAAMqK,EAAO,aAAIH,GAAKI,OAAO,EAAGtK,GAC1BuK,EAAO,aAAIL,GAAKI,OAAOtK,EAAQ,GACrC,MAAM,GAAN,oBAAWqK,GAAX,aAAoBE,IAOSC,CADjB,aAAON,GACkC3J,GAErD,OAhBG,SAAqB2J,EAAiBlK,EAAeyK,GACxD,MAAM,GAAN,oBAAWP,EAAIQ,MAAM,EAAG1K,IAAxB,CAAgCyK,GAAhC,aAA4CP,EAAIQ,MAAM1K,KAe/C2K,CAAYP,EAAsB5J,EAAY2J,GCMlD,IAAMS,GAAuB,CAChCpL,cAAe,GACf/H,YAAa,GACbhC,uBAAwB,GACxBiN,sBAAuB,GACvBmI,cAAe,GACfzQ,iBAAkB,GAClBsC,MAAO,KACPC,oBAAoB,EACpBmM,yBAAyB,EACzBgC,QAAQ,EACRtV,QAAS,GACTuV,cAAc,GAqGLC,GAAcC,aAAgB,CAAC1V,mBAlGV,WAA4D,IAA3DyE,EAA0D,uDAA1C4Q,GAAc/B,EAA4B,uCACzF,OAAQA,EAAOlT,MACX,KAAKmI,EACD,OAAO,2BACA9D,GADP,IAEI+Q,cAAc,IAGtB,KAAKhN,EACD,OAAO,2BAAI/D,GAAX,IAAkB8Q,QAAQ,EAAOrT,YAAaoR,EAAOpR,cAEzD,KAAKuG,EACD,OAAO,2BAAIhE,GAAX,IAAkB8Q,QAAQ,IAE9B,QACI,OAAO9Q,EAGX,KAAKiE,EACD,OAAO,2BACAjE,GADP,IAEIwF,cAAeqJ,EAAOrJ,gBAG9B,KAAKtB,EACD,OAAO,2BACAlE,GADP,IAEI0C,MAAOmM,EAAOnM,MACdC,oBAAoB,IAG5B,KAAKwB,EACD,OAAO,2BAAInE,GAAX,IAAkB8Q,QAAQ,IAE9B,KAAK1M,EACD,IAAM8M,EAAmC,QAA3BrC,EAAOU,WAAW5T,KAC1BwB,EAAagU,QAAQnR,EAAMvE,uBAAuBkF,MAAK,SAAC/E,GAAD,MAAwB,QAAdA,EAAKD,SAE5E,GAAIuV,GAAS/T,EAAY,CACrB,IAAIM,EAAcuC,EAAMvE,uBAAuBiD,QAAO,SAAC9C,GAAD,MAAwB,QAAdA,EAAKD,QAErE,OADA8B,EAAW,uBAAOA,GAAP,CAAoBoR,EAAOU,aAC/B,2BACAvP,GADP,IAEIvE,uBAAwBgC,IAG5B,OAAO,2BACAuC,GADP,IAEIvE,uBAAuB,GAAD,oBAAMuE,EAAMvE,wBAAZ,CAAoCoT,EAAOU,eAM7E,KAAKlL,EACD,OAAO,2BAAIrE,GAAX,IAAkB0I,sBAAuBmG,EAAO7F,QAEpD,KAAK1E,EACD,OAAO,2BACAtE,GADP,IAEI6Q,cAAe7Q,EAAM0I,sBAAsBhK,QAAO,SAAC9C,EAAwBoK,GAAzB,OAA2CA,IAAU6I,EAAO/P,MAAMkH,WAG5H,KAAKzB,EACD,OAAO,2BACAvE,GADP,IAEI8O,yBAAyB,EACzB1O,iBAAkByO,EAAOU,aAGjC,KAAK5K,GACD,OAAO,2BACA3E,GADP,IAEI8O,yBAAyB,EACzBnM,oBAAoB,EACpBvC,iBAAkB,KAG1B,KAAKwE,GACD,OAAO,2BACA5E,GADP,IAEI6Q,cAAeZ,GAAYjQ,EAAM0I,sBAAuBmG,EAAOtI,UAAWsI,EAAOrI,cAGzF,KAAK9B,GACD,OAAO,2BAAI1E,GAAX,IAAkBvE,uBAAuB,CAAEuE,EAAMvE,uBAAuB,IAAhC,oBAAuCuE,EAAM6Q,kBAEzF,KAAKrM,GACD,IAAM4M,EAAYpR,EAAMxE,QAAQqT,EAAO1H,QAAUnH,EAAMxE,QAAQqT,EAAO1H,QAAU,EAChF,OAAO,2BAAInH,GAAX,IAAkBxE,QAAQ,2BAAKwE,EAAMxE,SAAZ,mBAAsBqT,EAAO1H,OAASiK,EAAY,MAE/E,KAAK3M,GACD,IAAM2M,EAAYpR,EAAMxE,QAAQqT,EAAO1H,QAAUnH,EAAMxE,QAAQqT,EAAO1H,QAAU,EAChF,OAAO,2BAAInH,GAAX,IAAkBxE,QAAQ,2BAAKwE,EAAMxE,SAAZ,mBAAsBqT,EAAO1H,OAASiK,EAAY,QAKvBvD,YT3HrC,WAA8D,IAA7D7N,EAA4D,uDAAzCwK,GAAUqE,EAA+B,uCACpF,OAAQA,EAAOlT,MACX,KAAK0O,GACD,OAAO,2BACArK,GADP,IAEI4K,KAAMiE,EAAOrE,SAASI,KACtBC,aAAcgE,EAAOrE,SAASK,aAC9BC,YAAa+D,EAAOrE,SAASM,cAGrC,KAAKR,GACD,OAAO,2BACAtK,GADP,IAEI4K,KAAM,CACFQ,MAAO,GACPvO,KAAM,IAEViO,YAAa,GACbD,aAAc,KAGtB,QACI,OAAO7K,MUpBbqR,IAJgB,kBAAXC,QAAwBA,OAAeC,qCACvCD,OAAeC,qCAAqC,IACrDC,MAEwBC,aAAgBC,OAErC1R,GAAQ2R,aAAYX,GAAaK,IAG9ChP,IAASqM,OACL,cAAC,IAAMkD,WAAP,UACI,cAAC,IAAD,UACA,cAAC,IAAD,CAAUC,MAAO7R,GAAjB,SACI,cAAC,GAAD,UAIR+B,SAASC,eAAe,SAM5ByN,M,mBClCAxU,EAAOC,QAAU,CAAC,UAAY,sCAAsC,KAAO,iCAAiC,IAAM,gCAAgC,IAAM,gCAAgC,MAAQ,kCAAkC,KAAO,iCAAiC,IAAM,gCAAgC,WAAa,uCAAuC,gBAAkB,8C,mBCAtXD,EAAOC,QAAU,CAAC,IAAM,2BAA2B,IAAM,2BAA2B,QAAU,+BAA+B,MAAQ,6BAA6B,WAAa,oC,mBCA/KD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,OAAS,qBAAqB,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,mBAAmB,MAAQ,sB,mBCAtMD,EAAOC,QAAU,CAAC,IAAM,0BAA0B,OAAS,+B,mBCA3DD,EAAOC,QAAU,CAAC,aAAe,yCAAyC,KAAO,iCAAiC,WAAa,uCAAuC,UAAY,sCAAsC,UAAY,wC,mBCApOD,EAAOC,QAAU,CAAC,IAAM,wBAAwB,MAAQ,0BAA0B,KAAO,yBAAyB,OAAS,2BAA2B,MAAQ,0BAA0B,QAAU,8B,mBCAlMD,EAAOC,QAAU,CAAC,cAAgB,oCAAoC,cAAgB,oCAAoC,IAAM,0BAA0B,OAAS,+B,mBCAnKD,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,MAAQ,6BAA6B,YAAc,mCAAmC,QAAU,iC,mBCAvJD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,IAAM,uBAAuB,OAAS,4B,mBCAjGD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,IAAM,mB,mBCA/CD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,6BAA6B,OAAS,kC,mBCAnGD,EAAOC,QAAU,CAAC,IAAM,4BAA4B,KAAO,+B,mBCA3DD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,4B","file":"static/js/main.24014379.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"app-header_btn__3TwgT\",\"text\":\"app-header_text__1MWe2\",\"header\":\"app-header_header__1aEKL\",\"navBox\":\"app-header_navBox__3turo\",\"logo\":\"app-header_logo__2hEKJ\",\"navBox2\":\"app-header_navBox2__2vmqU\",\"activeLink\":\"app-header_activeLink__1axER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"burger-ingredients_body__2_PEo\",\"header\":\"burger-ingredients_header__PSEI8\",\"ingredients\":\"burger-ingredients_ingredients__2TY9H\",\"container\":\"burger-ingredients_container__EME_h\",\"nav\":\"burger-ingredients_nav__ICNB4\",\"btn\":\"burger-ingredients_btn__2nKHx\",\"tag\":\"burger-ingredients_tag__EUm2b\",\"link\":\"burger-ingredients_link__2-zFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ingredient-details_box__13uO5\",\"title\":\"ingredient-details_title__2_5MB\",\"container\":\"ingredient-details_container__1-8YX\",\"image\":\"ingredient-details_image__H2-xP\",\"descriptor\":\"ingredient-details_descriptor__AX7r9\",\"list\":\"ingredient-details_list__2aOfA\",\"heading\":\"ingredient-details_heading__bGiiD\",\"numbers\":\"ingredient-details_numbers__iywG6\"};","import {Action, ActionCreator} from 'redux'\nimport {TAction} from \"../services/actions\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {Dispatch} from \"react\";\nimport {TypedUseSelectorHook, useDispatch as dispatchHook, useSelector as selectorHook} from \"react-redux\";\nimport {state} from \"../index\";\n\nexport type TState = {\n    ingredientIds: Array<number>\n    ingredients: Array<TClearIngredient>,\n    constructorIngredients: Array<TIngredientForConstructor>,\n    nonBunIngredientsList: Array<TIngredientForConstructor>,\n    dragContainer: any | Array<TConstructorItem>,\n    ingredientDetail: Record<string, any> | TIngredientDetail,\n    order: null | TOrder,\n    isOrderDetailsOpen: boolean,\n    isIngredientDetailsOpen: boolean,\n    loader: boolean,\n    counter: Record<string, number>,\n    itemsRequest: boolean\n}\n\nexport type TUserData = {\n    user: TUser,\n    accessToken: string\n    refreshToken: string\n}\n\nexport interface TUser {\n    email: string,\n    name: string\n    // password:string\n}\n\nexport interface TUserWithPassword extends TUser {\n    password: string\n}\n\nexport interface TUserLoginData {\n    email: string,\n    password: string\n}\n\nexport type TIngredientDetail = {\n    _id?: number\n    id: number\n    calories: number\n    proteins: number\n    fat: number\n    carbohydrates: number\n    image: string\n    name: string\n}\n\nexport type TOrder = {\n    success: boolean;\n    name: string;\n    order: {\n        order: number\n    };\n};\n\nexport type TModal = {\n    closeModal: () => void\n    children?: any,\n    title?: string,\n    isOpen?: boolean\n}\n\n\nexport interface TIngredient extends TClearIngredient {\n    onItemClick: (item: TIngredient) => void\n}\n\nexport type TClearIngredient = {\n    id?: number\n    _id: string,\n    name: string,\n    image: string,\n    price: number\n    img: string;\n    type: string\n}\n\nexport type StoredIngredient = Omit<TIngredient, 'onItemClick'>\n\n\nexport interface BurgerIngredientsTypes {\n    onIngredientClick: (item: TIngredient) => void\n}\n\nexport interface TConstructorItem extends TClearIngredient {\n    // text: string\n    // thumbnail: string\n    // isLocked: boolean\n    index: number\n    handleClose: (_id: string | number, index: string | number,) => void\n}\n\nexport interface TListItems {\n    type: string\n}\n\nexport interface BurgerConstructorTypes {\n    onDropHandler: (item: any) => void\n}\n\nexport interface TIngredientForConstructor extends TConstructorItem {\n    unikey: string\n    type: string\n}\n\nexport interface ConstructorItemProps {\n    index: number;\n    _id: string;\n    name: string;\n    price: number;\n    image: string;\n\n}\n\nexport type RootState = ReturnType<typeof state.getState>\n\n\nexport type AppThunk<TReturn = void> = ActionCreator<ThunkAction<TReturn, Action, RootState, TAction>>;\n// export type AppDispatch = typeof initialState.dispatch\nexport type AppDispatch = Dispatch<TAction>\n\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();","import styles from \"./ingredient.module.css\";\nimport React, {useEffect} from \"react\";\nimport {Counter, CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components'\nimport {useDrag} from \"react-dnd\";\nimport {TConstructorItem, TIngredient, useSelector} from \"../../utils/types\";\n\nfunction Ingredient(props: TIngredient) {\n\n    const {counter, constructorIngredients} = useSelector(({ingredientsReducer}) => ingredientsReducer)\n\n    const [{isDrag}, dragRef] = useDrag({\n        type: \"item\",\n        item: props,\n        collect: monitor => ({\n            isDrag: monitor.isDragging()\n        })\n    });\n\n    function handleClick() {\n        props.onItemClick(props)\n    }\n\n    function isBunAdded(constructorIngredients: ReadonlyArray<TConstructorItem>): boolean {\n        return constructorIngredients.findIndex((ing) => ing.type === 'bun' && ing._id === props._id) !== -1\n    }\n\n    return (\n        <section\n            onClick={handleClick}\n            ref={dragRef}\n        >\n            <div className={styles.box}>\n                <div className={styles.wrapper}>\n                    <img className={styles.image} src={props.img} alt={props.name}/>\n                    {counter[props._id] > 0 && props.type !== 'bun' &&\n                      <Counter count={counter[props._id]} size=\"default\"/>\n                    }\n                    {isBunAdded(constructorIngredients) &&\n                     <Counter count={1} size=\"default\"/>\n                    }\n                </div>\n                <h3 className={styles.price}>\n                    <p className={styles.number}>{props.price}</p>\n                    <CurrencyIcon type=\"primary\"/>\n                </h3>\n                <h4 className={styles.name}>{props.name}</h4>\n            </div>\n        </section>\n    )\n}\n\nexport default Ingredient","import React, {useEffect, useRef} from 'react';\nimport styles from \"./burger-ingredients.module.css\";\nimport Ingredient from \"../ingedient/ingredient\";\nimport {Tab} from '@ya.praktikum/react-developer-burger-ui-components'\nimport {BurgerIngredientsTypes, TClearIngredient, TIngredient, useSelector} from \"../../utils/types\";\nimport {useLocation, Link} from \"react-router-dom\";\n\n\nfunction BurgerIngredients(props: BurgerIngredientsTypes) {\n    let location = useLocation();\n\n    const {ingredients} = useSelector(({ingredientsReducer}) => ingredientsReducer)\n    const bunSection = useRef<HTMLHeadingElement>(null)\n    const sauceSection = useRef<HTMLHeadingElement>(null)\n    const mainSection = useRef<HTMLHeadingElement>(null)\n\n    const [current, setCurrent] = React.useState<string>('one')\n    const [bunList, setBunList] = React.useState<Array<TClearIngredient>>([])\n    const [sauceList, setSauceList] = React.useState<Array<TClearIngredient>>([])\n    const [mainList, setMainList] = React.useState<Array<TClearIngredient>>([])\n\n    useEffect(() => {\n        setBunList(ingredients.filter((item) => item.type === 'bun'))\n        setSauceList(ingredients.filter((item) => item.type === 'sauce'))\n        setMainList(ingredients.filter((item) => item.type === 'main'))\n    }, [ingredients])\n\n    function onScroll(event: React.SyntheticEvent) {\n        const container: any = event.target;\n        const scrollPosition = container.scrollTop\n\n        if (!sauceSection || !sauceSection.current) return;\n        if (!mainSection || !mainSection.current) return;\n\n        const positionSauce = sauceSection.current.offsetTop\n        const positionMain = mainSection.current.offsetTop\n        if (scrollPosition + 100 <= positionSauce) {\n            setCurrent('one')\n        } else if (scrollPosition + 100 <= positionMain) {\n            setCurrent('two')\n        } else {\n            setCurrent('three')\n        }\n    }\n\n    function onItemClick(item: TIngredient): void {\n        props.onIngredientClick(item)\n    }\n\n    return (\n        <div className={styles.body}>\n            <div className={styles.header}>\n                <h1 className=\"text text_type_main-large\">Соберите бургер</h1>\n            </div>\n            <div className={styles.nav}>\n                <Tab value=\"one\" active={current === 'one'} onClick={value => {\n                    setCurrent(value)\n                    if (!bunSection || !bunSection.current) return;\n                    bunSection.current.scrollIntoView({behavior: \"smooth\"})\n                }}>\n                    Булки\n                </Tab>\n                <Tab value=\"two\" active={current === 'two'} onClick={value => {\n                    setCurrent(value)\n                    if (!sauceSection || !sauceSection.current) return;\n                    sauceSection.current.scrollIntoView({behavior: \"smooth\"})\n                }}\n                >\n                    Соусы\n                </Tab>\n                <Tab value=\"three\" active={current === 'three'} onClick={value => {\n                    setCurrent(value)\n                    if (!mainSection || !mainSection.current) return;\n                    mainSection.current.scrollIntoView({behavior: \"smooth\"})\n                }}\n                >\n                    Начинка\n                </Tab>\n            </div>\n            <div className={styles.ingredients}\n                 onScroll={onScroll}\n            >\n                <section\n                    ref={bunSection}\n                >\n                    <h2 className={styles.tag}> Булки </h2>\n                    <div className={styles.container}>\n                        {bunList.map((item) => {\n                            return (\n                                <Link\n                                    className={styles.link}\n                                    key={item._id}\n                                    to={{\n                                        pathname: `/ingredient/${item._id}`,\n                                        state: { background: location }\n                                    }}\n                                >\n                                <Ingredient {...item}\n                                                key={item._id}\n                                                img={item.image}\n                                                price={item.price}\n                                                name={item.name}\n                                                onItemClick={onItemClick}\n                            />\n                                </Link>)\n                        })}\n                    </div>\n                </section>\n                <section\n                    ref={sauceSection}\n                >\n                    <h2 className={styles.tag}>Соусы</h2>\n                    <div className={styles.container}>\n                        {sauceList.map((item) => {\n                            return (\n                                <Link\n                                    className={styles.link}\n                                    key={item._id}\n                                    to={{\n                                        pathname: `/ingredient/$${item._id}`,\n                                        state: { background: location }\n                                    }}\n                                >\n                                <Ingredient {...item}\n                                                onItemClick={onItemClick}\n                                                key={item._id}\n                                                img={item.image}\n                                                price={item.price}\n                                                name={item.name}\n                            />\n                                </Link>)\n                        })}\n                    </div>\n                </section>\n                <section\n                    ref={mainSection}\n                >\n                    <h2 className={styles.tag}>Начинка</h2>\n                    <div className={styles.container}>\n                        {mainList.map((item) => {\n                            return (\n                                <Link\n                                    className={styles.link}\n                                    key={item._id}\n                                    to={{\n                                        pathname: `/ingredient/${item._id}`,\n                                        state: { background: location }\n                                    }}\n                                >\n                                <Ingredient {...item}\n                                                key={item._id}\n                                                img={item.image}\n                                                price={item.price}\n                                                name={item.name}\n                                                onItemClick={onItemClick}\n                            />\n                                </Link>)\n                        })}\n                    </div>\n                </section>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default BurgerIngredients","import React from \"react\";\nimport styles from './ingredient-details.module.css'\nimport {useSelector} from \"../../utils/types\";\nimport {useParams} from \"react-router-dom\";\n\n\nfunction IngredientDetails() {\n\n    const {ingredientDetail, ingredients} = useSelector(({ingredientsReducer}) => ingredientsReducer);\n    let { id } = useParams() as any;\n    const detail = Object.keys(ingredientDetail).length === 0 ? ingredients.find((ing) => ing._id === id) : ingredientDetail;\n    return (\n        <div className={styles.box}>\n            <div className={styles.container}>\n                <img className={styles.image} src={detail?.image} alt={'name'}/>\n                <h2 className={styles.descriptor}>{detail?.name}</h2>\n                <div className={styles.list}>\n                    <h4 className={styles.heading}>Калории,ккал</h4>\n                    <h4 className={styles.heading}>Белки, г</h4>\n                    <h4 className={styles.heading}>Жиры, г</h4>\n                    <h4 className={styles.heading}>Углеводы, г</h4>\n                    <p className={styles.numbers}>{detail?.calories}</p>\n                    <p className={styles.numbers}>{detail?.proteins}</p>\n                    <p className={styles.numbers}>{detail?.fat}</p>\n                    <p className={styles.numbers}>{detail?.carbohydrates}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default IngredientDetails;","export default __webpack_public_path__ + \"static/media/check-mark.4f9c8f60.png\";","import React, {MouseEvent} from \"react\";\nimport styles from './modal-overlay.module.css'\nimport {TModal} from \"../../utils/types\";\n\nfunction ModalOverlay(props: TModal) {\n    const closeModal = props.closeModal\n\n    function closeModalClick(evt: MouseEvent) {\n        if ((evt.target as HTMLDivElement).classList.contains(styles.overlay)) closeModal()\n    }\n\n    return (\n        <div className={props.isOpen ? `${styles.modal_open} ${styles.overlay}` : styles.overlay}\n             onClick={closeModalClick}\n        >\n            {props.children}\n        </div>\n    )\n}\n\nexport default ModalOverlay","import React, {useEffect} from \"react\";\nimport ReactDOM from 'react-dom';\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\nimport styles from \"../modal-overlay/modal-overlay.module.css\";\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {TModal} from \"../../utils/types\";\n\n\nfunction Modal(props: TModal) {\n\n    const modalRoot = document.getElementById('modal-root') as HTMLElement\n\n    useEffect(() => {\n        const closeByEscape = (e: KeyboardEvent) => {\n            if (e.key === \"Escape\") {\n                props.closeModal()\n            }\n        }\n        document.addEventListener('keydown', closeByEscape)\n        return () => document.removeEventListener('keydown', closeByEscape)\n    },[])\n\n    return ReactDOM.createPortal(\n        (\n            <ModalOverlay {...props}>\n                <div className={styles.box}>\n                    <div className={styles.btn}>\n                        <h1 className={styles.title}>{props.title}</h1>\n                        <CloseIcon type=\"primary\" onClick={props.closeModal}/>\n                    </div>\n                    {props.children}\n                </div>\n            </ModalOverlay>\n        ), modalRoot)\n}\n\nexport default Modal","import React from \"react\";\nimport CekMark from '../../images/check-mark.png'\nimport styles from './order-ditails.module.css'\nimport Modal from \"../modal/modal\";\nimport {TModal, useSelector} from \"../../utils/types\";\n\n\nfunction OrderDetails(props: TModal) {\n    const {order, isOrderDetailsOpen} = useSelector(({ingredientsReducer}) => ingredientsReducer)\n    return (\n        <Modal\n            closeModal={props.closeModal}\n            isOpen={isOrderDetailsOpen}\n        >\n            <p className=\"text text_type_digits-large\">{order}</p>\n            <h2 className={styles.title}>идентификатор заказа</h2>\n            <img src={CekMark} className={styles.image} alt={\"name\"}/>\n            <h3 className={styles.orderStatus}>Ваш заказ начали готовить</h3>\n            <h3 className={styles.addInfo}>Дождитесь готовности на орбитальной станции</h3>\n        </Modal>\n    )\n}\n\n\nexport default OrderDetails;","import React from \"react\";\nimport {BurgerIcon, Logo, MenuIcon, ProfileIcon} from '@ya.praktikum/react-developer-burger-ui-components'\nimport styles from './app-header.module.css';\nimport {NavLink} from 'react-router-dom';\n\nfunction AppHeader() {\n\n    return (\n        <nav>\n            <div className={styles.header}>\n                <div className={styles.navBox}>\n                    <div className={styles.btn}>\n                        <NavLink className={styles.navBox2} to={\"/\"} activeClassName={styles.activeLink}>\n                            <BurgerIcon type=\"primary\"/>\n                            <p className={`text text_type_main-default ${styles.text}`}>\n                                Конструктор</p>\n                        </NavLink>\n                    </div>\n                    <div className={styles.btn}>\n                        <NavLink className={styles.navBox2} to={\"/order\"} activeClassName={styles.activeLink}>\n                            <MenuIcon type=\"primary\"/>\n                            <p className={`text text_type_main-default ${styles.text}`}>\n                                Лента заказов</p>\n                        </NavLink>\n                    </div>\n                </div>\n                <div className={styles.logo}>\n                    <Logo/>\n                </div>\n                <NavLink className={styles.navBox2} to={\"/profile\"} activeClassName={styles.activeLink}>\n                    <ProfileIcon type=\"primary\"/>\n                    <span className={`text text_type_main-default ${styles.text}`}>личный кабинет</span>\n                </NavLink>\n            </div>\n        </nav>\n    )\n}\n\nexport default AppHeader","export default __webpack_public_path__ + \"static/media/bun01.ed27b2aa.png\";","import {TUserData, TUserLoginData, TUserWithPassword} from \"../utils/types\";\n\nexport const BASE_URL = \"https://norma.nomoreparties.space/api/\"\nconst handleResponse = (res: Response) => {\n    if (!res.ok) {\n        return Promise.reject(`Error: ${res.status}`);\n    }\n    return res.json();\n}\n\nexport function getIngredientsData() {\n    return fetch(`${BASE_URL}ingredients`)\n        .then(handleResponse)\n}\n\nexport function getInitialOrder(ingredientIds: Array<number>) {\n    return fetch(`${BASE_URL}orders`, {\n        method: \"POST\",\n        body: JSON.stringify({ingredients: ingredientIds}),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(handleResponse)\n}\n\nexport function getReorderPassword(email: string): Promise<{ success: boolean, message: string }> {\n    return fetch(`${BASE_URL}password-reset`, {\n        method: \"POST\",\n        body: JSON.stringify({email}),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(handleResponse)\n}\n\nexport type TRegistrationResponse = TUserData & TResponse\n\n\nexport interface TResponse {\n    success: boolean;\n    message: string;\n}\n\nexport function getRegisterUserData(userData: TUserWithPassword): Promise<TRegistrationResponse> {\n    return fetch(`${BASE_URL}auth/register`, {\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(handleResponse)\n}\n\nexport function getLoginUserData(userData: TUserLoginData): Promise<TRegistrationResponse> {\n    return fetch(`${BASE_URL}auth/login`, {\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(handleResponse)\n}\n\nexport function getLogOut(token: string): Promise<TResponse> {\n    return fetch(`${BASE_URL}auth/logout`, {\n        method: \"POST\",\n        body: JSON.stringify({token}),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(handleResponse)\n}\n\nexport function updateUserData(accessToken: string, user: TUserWithPassword): Promise<TRegistrationResponse> {\n    return fetch(`${BASE_URL}auth/user`, {\n        method: \"PATCH\",\n        body: JSON.stringify(user),\n        headers: {\n            'Content-Type': 'application/json',\n            'authorization': accessToken\n        }\n    })\n        .then(handleResponse)\n}\n\nexport function getUserData(accessToken: string): Promise<TRegistrationResponse> {\n    return fetch(`${BASE_URL}auth/user`, {\n        method: \"GET\",\n        headers: {\n            'Content-Type': 'application/json',\n            'authorization': accessToken\n        }\n    })\n        .then(handleResponse)\n}","import {getIngredientsData, getInitialOrder} from \"../../api/api\";\nimport {\n    AppDispatch,\n    AppThunk,\n    TClearIngredient,\n    TIngredient,\n    TIngredientDetail,\n    TIngredientForConstructor,\n    TOrder\n} from \"../../utils/types\";\nimport {removeUser, TAuthAction} from \"./auth\";\n\nexport const GET_INGREDIENTS_REQUEST: \"GET_INGREDIENTS_REQUEST\" = 'GET_INGREDIENTS_REQUEST';\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\nexport const GET_ORDER_INGREDIENTS_REQUEST: 'GET_ORDER_INGREDIENTS_REQUEST' = 'GET_ORDER_INGREDIENTS_REQUEST';\nexport const GET_ORDER_INGREDIENTS_SUCCESS: 'GET_ORDER_INGREDIENTS_SUCCESS' = 'GET_ORDER_INGREDIENTS_SUCCESS';\nexport const GET_ORDER_INGREDIENTS_FAILED: 'GET_ORDER_INGREDIENTS_FAILED' = 'GET_ORDER_INGREDIENTS_FAILED';\nexport const ADD_INGREDIENT_TO_CONSTRUCTOR: 'ADD_INGREDIENT_TO_CONSTRUCTOR' = 'ADD_INGREDIENT_TO_CONSTRUCTOR';\nexport const ADD_INGREDIENT_TO_NON_BUN_ITEMS: 'ADD_INGREDIENT_TO_NON_BUN_ITEMS' = 'ADD_INGREDIENT_TO_NON_BUN_ITEMS';\nexport const REMOVE_INGREDIENT_FROM_CONSTRUCTOR: 'REMOVE_INGREDIENT_FROM_CONSTRUCTOR' = 'REMOVE_INGREDIENT_FROM_CONSTRUCTOR';\nexport const SHOW_INGREDIENT: 'SHOW_INGREDIENT' = 'SHOW_INGREDIENT';\nexport const INCREASE_COUNTER: 'INCREASE_COUNTER' = 'INCREASE_COUNTER';\nexport const DECREASE_COUNTER: 'DECREASE_COUNTER' = 'DECREASE_COUNTER';\nexport const MOVE_INSIDE_CONSTRUCTOR: 'MOVE_INSIDE_CONSTRUCTOR' = 'MOVE_INSIDE_CONSTRUCTOR';\nexport const CLOSE_MODAL: \"CLOSE_MODAL\" = 'CLOSE_MODAL';\nexport const REORDER_CONSTRUCTOR: \"REORDER_CONSTRUCTOR\" = 'REORDER_CONSTRUCTOR';\nexport const INCREASE_BUN_COUNTER: \"INCREASE_BUN_COUNTER\" = \"INCREASE_BUN_COUNTER\"\n\nexport interface getIngredientRequest {\n    type: typeof GET_INGREDIENTS_REQUEST;\n}\n\nexport interface getIngredientSuccess {\n    type: typeof GET_INGREDIENTS_SUCCESS;\n    ingredients: Array<TClearIngredient>\n}\n\nexport interface getIngredientFailed {\n    type: typeof GET_INGREDIENTS_FAILED;\n}\n\nexport interface getOrderIngredientRequest {\n    type: typeof GET_ORDER_INGREDIENTS_REQUEST;\n    ingredientIds: Array<number>\n}\n\nexport interface getOrderIngredientSuccess {\n    type: typeof GET_ORDER_INGREDIENTS_SUCCESS;\n    order: TOrder\n}\n\nexport interface getOrderIngredientFailed {\n    type: typeof GET_ORDER_INGREDIENTS_FAILED;\n}\n\nexport interface addIngredientToConstructor {\n    type: typeof ADD_INGREDIENT_TO_CONSTRUCTOR;\n    ingredient: TIngredientForConstructor\n}\n\nexport interface addIngredientToNonBunItems {\n    type: typeof ADD_INGREDIENT_TO_NON_BUN_ITEMS;\n    items: Array<TIngredientForConstructor>\n}\n\nexport interface removeIngredientFromConstructor {\n    type: typeof REMOVE_INGREDIENT_FROM_CONSTRUCTOR;\n    index: number\n    value: any\n}\n\nexport interface showIngredient {\n    type: typeof SHOW_INGREDIENT;\n    ingredient: TIngredientDetail\n}\n\nexport interface increaseCounter {\n    type: typeof INCREASE_COUNTER;\n    itemId: number\n}\n\nexport interface decreaseCounter {\n    type: typeof DECREASE_COUNTER;\n    itemId: number\n}\n\nexport interface moveInsideConstructor {\n    type: typeof MOVE_INSIDE_CONSTRUCTOR;\n}\n\nexport interface closeModal {\n    type: typeof CLOSE_MODAL;\n}\n\nexport interface reorderConstructor {\n    type: typeof REORDER_CONSTRUCTOR;\n    dragIndex: number\n    hoverIndex: number\n}\n\nexport type TAction =\n    | addIngredientToConstructor\n    | addIngredientToNonBunItems\n    | closeModal\n    | decreaseCounter\n    | getIngredientFailed\n    | getIngredientRequest\n    | getIngredientSuccess\n    | getOrderIngredientFailed\n    | getOrderIngredientRequest\n    | getOrderIngredientSuccess\n    | increaseCounter\n    | moveInsideConstructor\n    | removeIngredientFromConstructor\n    | reorderConstructor\n    | showIngredient\n    | TAuthAction\n    | removeUser\n\nconst getIngredientRequest = (): getIngredientRequest => ({\n    type: GET_INGREDIENTS_REQUEST\n})\n\nconst getIngredientSuccess = (ingredients: Array<TIngredient>): getIngredientSuccess => ({\n    type: GET_INGREDIENTS_SUCCESS,\n    ingredients\n})\n\nconst getIngredientFailed = (): getIngredientFailed => ({\n    type: GET_INGREDIENTS_FAILED,\n})\n\nexport const getIngredients: AppThunk = () => (dispatch: AppDispatch) => {\n    // return function (dispatch: any) {\n    dispatch(getIngredientRequest());\n    getIngredientsData().then(res => {\n        if (res && res.success) {\n            dispatch(\n                getIngredientSuccess(res.data),\n                //  ingredients: res.data\n            );\n        } else {\n            dispatch(getIngredientFailed());\n        }\n    })\n        .catch((err) => console.log(\"failed\", err))\n    // };\n}\n\nconst getOrderIngredientRequest = (ingredientIds: Array<number>): getOrderIngredientRequest => ({\n    type: GET_ORDER_INGREDIENTS_REQUEST,\n    ingredientIds\n})\nconst getOrderIngredientSuccess = (order: TOrder): getOrderIngredientSuccess => ({\n    type: GET_ORDER_INGREDIENTS_SUCCESS,\n    order\n})\nconst getOrderIngredientFailed = (): getOrderIngredientFailed => ({\n    type: GET_ORDER_INGREDIENTS_FAILED,\n})\n\nexport const getOrderIngredients: AppThunk = (ingredientIds: Array<number>) => (dispatch: AppDispatch) => {\n    // return function (dispatch: any) {\n    dispatch(getOrderIngredientRequest(ingredientIds));\n    getInitialOrder(ingredientIds).then(res => {\n        if (res && res.success) {\n            dispatch(getOrderIngredientSuccess(res.order.number)\n            );\n        } else {\n            dispatch(getOrderIngredientFailed());\n        }\n    })\n        .catch((err) => console.log(\"failed\", err))\n    //   };\n}\n\n\n","import {ConstructorElement, DragIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, {useRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {DropTargetMonitor, useDrag, useDrop} from \"react-dnd\";\nimport styles from \"../burger-constructor/burger-constructor.module.css\";\nimport {\n    DECREASE_COUNTER,\n    MOVE_INSIDE_CONSTRUCTOR,\n    REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\n    REORDER_CONSTRUCTOR\n} from \"../../services/actions\";\nimport {debounce} from \"lodash\";\nimport {ConstructorItemProps, TConstructorItem} from \"../../utils/types\";\n\n\nexport default function ConstructorItem(props: ConstructorItemProps) {\n    const ref = useRef<HTMLHeadingElement>(null);\n    const index = props.index;\n    const id = props._id\n    const dispatch = useDispatch();\n\n    function onHover(item: TConstructorItem, monitor: DropTargetMonitor) {\n        const dragIndex = item.index;\n        const hoverIndex = props.index\n        if (dragIndex === hoverIndex) {\n            return;\n        }\n        dispatch({type: REORDER_CONSTRUCTOR, dragIndex, hoverIndex})\n        item.index = hoverIndex;\n        dispatch({\n            type: MOVE_INSIDE_CONSTRUCTOR\n        })\n    }\n\n    const [{handlerId}, drop]: any = useDrop({\n        accept: \"primary\",\n        collect(monitor) {\n            return {\n                isDrag: monitor.getHandlerId(),\n            };\n        },\n        hover: debounce((item: TConstructorItem, monitor: DropTargetMonitor) => onHover(item, monitor), 300),\n    });\n    const [{isDragging}, drag] = useDrag({\n        type: \"primary\",\n        item: () => {\n            return {id, index};\n        },\n        collect: (monitor) => {\n            return ({\n                isDragging: monitor.isDragging(),\n            });\n        },\n    });\n\n    function removeIngredient(id: string, index: number) {\n        dispatch({\n            type: REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\n            value: {id, index}\n        })\n        dispatch({\n            type: MOVE_INSIDE_CONSTRUCTOR\n        })\n        dispatch({\n            type: DECREASE_COUNTER,\n            itemId: id\n        })\n    }\n\n    drag(drop(ref));\n    const opacity = isDragging ? 0 : 1;\n    return (\n        <div\n            className={styles.middleItemsList}\n            ref={ref}\n            data-handler-id={handlerId}\n            style={{opacity}}\n        >\n            <DragIcon type=\"primary\"/>\n            <ConstructorElement\n                isLocked={false}\n                text={props.name}\n                price={props.price}\n                thumbnail={props.image}\n                handleClose={() => removeIngredient(props._id, props.index)}\n            />\n        </div>\n    )\n}","export function setCookie(name: string, value: string, seconds: number): void {\n    let expires = \"\";\n    if (seconds) {\n        const date = new Date();\n        date.setTime(date.getTime() + (seconds * 1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n}\n\nexport function getCookie(name: string): string | null {\n    const nameEQ = name + \"=\";\n    const ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n}\n\nexport function eraseCookie(name: string): void {\n    document.cookie = name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n}\n","import React, {useEffect, useState} from \"react\";\nimport styles from './burger-constructor.module.css'\nimport {ConstructorElement, CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components'\nimport {BurgerConstructorTypes, TIngredient, useSelector} from \"../../utils/types\";\nimport {useDispatch} from 'react-redux';\nimport {useDrop} from \"react-dnd\";\nimport bun from '../../images/bun01.png'\nimport {ADD_INGREDIENT_TO_NON_BUN_ITEMS, getOrderIngredients} from \"../../services/actions\";\nimport ConstructorItem from \"../constructor-item/constructor-item\";\nimport {getCookie} from \"../../utils/cookies-helpers\";\nimport {useHistory} from \"react-router-dom\";\n\n\nfunction BurgerConstructor(props: BurgerConstructorTypes) {\n  const history = useHistory()\n    const {\n        constructorIngredients,\n        nonBunIngredientsList,\n    } = useSelector(({ingredientsReducer}) => ingredientsReducer)\n    const dispatch = useDispatch();\n\n    const [sum, setSum] = useState(0);\n    const [bunItem, setBunItem] = React.useState({name: 'add bun', image: bun, price: 0})\n\n    useEffect(() => {\n        dispatch({\n            type: ADD_INGREDIENT_TO_NON_BUN_ITEMS,\n            items: constructorIngredients.filter((item) => item.type === 'sauce' || item.type === 'main')\n        })\n        const bun = constructorIngredients.find((item) => item.type === 'bun')\n        if (bun) setBunItem(bun)\n    }, [constructorIngredients, dispatch])\n\n    const [, dropTarget] = useDrop({\n        accept: \"item\",\n        drop(dropTarget: TIngredient) {\n           props.onDropHandler(dropTarget)\n            if (dropTarget.type === 'bun') {\n                setBunItem(dropTarget)\n            }\n        }\n    });\n\n    function handleOrderDetailClick() {\n        const token = getCookie('accessToken');\n        if (!token) {\n           history.push( \"/login\")\n        }\n        else\n        dispatch(getOrderIngredients(constructorIngredients.map((item) => item._id)))\n    }\n\n\n    useEffect(() => {\n        const pricesList = nonBunIngredientsList.map((item) => Number(item.price))\n        let num = bunItem.price\n        setSum(pricesList.reduce((a, b) => a + b, num))\n    }, [constructorIngredients, nonBunIngredientsList, bunItem])\n\n\n    return (\n        <div className={styles.box}\n             ref={dropTarget}\n        >\n            <section className={styles.bunSection}>\n                <ConstructorElement\n                    type=\"top\"\n                    isLocked={true}\n                    text={bunItem.name + \"(верх)\"}\n                    price={bunItem.price}\n                    thumbnail={bunItem.image}\n                />\n            </section>\n            <div className={styles.container}>\n                {nonBunIngredientsList.map((item, index) => {\n                    return (\n                        <ConstructorItem {...item} index={index}/>\n                    )\n                })}\n            </div>\n            <section className={styles.bunSection}>\n                <ConstructorElement\n                    type=\"bottom\"\n                    isLocked={true}\n                    text={bunItem.name + \"(низ)\"}\n                    price={bunItem.price}\n                    thumbnail={bunItem.image}\n                />\n            </section>\n            <div className={styles.total}>\n                <h2 className={styles.sum}>{sum}</h2>\n                <CurrencyIcon type=\"primary\"/>\n                <button\n                    className={styles.btn}\n                    onClick={handleOrderDetailClick}\n                >\n                    Оформить заказ\n                </button>\n            </div>\n        </div>\n    )\n}\n\n//BurgerConstructor.propTypes = BurgerConstructorTypes\n\nexport default BurgerConstructor","import styles from \"./auth.module.css\";\nimport {Link} from 'react-router-dom';\n\n\nexport function AuthExtra(props: TAuthExtraProps) {\n    return (\n        <div className={styles.extra}>\n            <h3 className={styles.option}>{props.text}</h3>\n            <Link className={styles.link} to={props.route}>{props.linkText}</Link>\n        </div>\n    )\n}\n\n\ninterface TAuthExtraProps {\n    text: string;\n    link: string;\n    linkText: string;\n    route: string\n}","import styles from \"./auth.module.css\";\nimport {AuthExtra} from \"./auth-extra\";\nimport {SyntheticEvent} from \"react\";\n\nexport function AuthForm(props: TAuthFormProps) {\n\n    function onSubmit(e: SyntheticEvent): void {\n        if (!props.onSubmit) return;\n        e.preventDefault();\n        props.onSubmit();\n    }\n\n    return (\n        <div className={styles.main}>\n            <div className={styles.container}>\n                <h2 className={styles.title}> {props.title} </h2>\n                <form className={styles.form} onSubmit={onSubmit}>\n                    {props.children}\n                </form>\n                <AuthExtra text={props.text}\n                           link={props.link}\n                           linkText={props.linkText}\n                           route={props.route}\n                />\n                {/*<AuthExtra text={props.text}*/}\n                {/*           link={props.link}*/}\n                {/*           linkText={props.linkText}/>*/}\n            </div>\n        </div>\n    )\n}\n\ninterface TAuthFormProps {\n    children: any;\n    title: string;\n    text: string;\n    link: string;\n    linkText: string;\n    route: string\n    onSubmit?: () => any\n}","import {AppDispatch, AppThunk, TUserData, TUserLoginData, TUserWithPassword} from \"../../utils/types\";\nimport {\n    getLoginUserData,\n    getLogOut,\n    getRegisterUserData,\n    getReorderPassword,\n    getUserData,\n    TRegistrationResponse,\n    TResponse,\n    updateUserData\n} from \"../../api/api\";\n\nexport const SET_USER_DATA: \"SET_USER_DATA\" = 'SET_USER_DATA';\n\nexport interface setUserData {\n    type: typeof SET_USER_DATA\n    userData: TUserData\n}\n\nexport const setUserData = (userData: TUserData): setUserData => ({\n    type: SET_USER_DATA,\n    userData\n})\n\nexport const REMOVE_USER: \"REMOVE_USER\" = \"REMOVE_USER\";\n\nexport interface removeUser {\n    type: typeof REMOVE_USER\n    userData: TUserData\n}\n\nexport type TAuthAction =\n    | setUserData\n    | getRegisterProfileRequest\n    | getRegisterProfileSuccess\n    | getRegisterProfileFailed\n    | getLoginRequest\n    | getLoginSuccess\n    | getLoginFailed\n    | reorderPasswordRequest\n    | reorderPasswordSuccess\n    | reorderPasswordFailed\n    | logOutRequest\n    | logOutSuccess\n    | logOutFailed\n    | getUserDataRequest\n    | getUserDataSuccess\n    | getUserDataFailed\n    | getUpdateUserDataRequest\n    | getUpdateUserDataSuccess\n    | getUpdateUserDataFailed\n\n\nexport const GET_REGISTER_PROFILE_REQUEST: \"GET_REGISTER_PROFILE_REQUEST\" = 'GET_REGISTER_PROFILE_REQUEST';\nexport const GET_REGISTER_PROFILE_SUCCESS: 'GET_REGISTER_PROFILE_SUCCESS' = 'GET_REGISTER_PROFILE_SUCCESS';\nexport const GET_REGISTER_PROFILE_FAILED: 'GET_REGISTER_PROFILE_FAILED' = 'GET_REGISTER_PROFILE_FAILED';\n\n\nexport interface getRegisterProfileRequest {\n    type: typeof GET_REGISTER_PROFILE_REQUEST;\n    userData: TUserWithPassword;\n}\n\nexport interface getRegisterProfileSuccess {\n    type: typeof GET_REGISTER_PROFILE_SUCCESS;\n    userData: TUserData;\n}\n\nexport interface getRegisterProfileFailed {\n    type: typeof GET_REGISTER_PROFILE_FAILED;\n}\n\n\nconst getRegisterProfileRequest = (userData: TUserWithPassword): getRegisterProfileRequest => ({\n    type: GET_REGISTER_PROFILE_REQUEST,\n    userData\n})\nconst getRegisterProfileSuccess = (userData: TUserData): getRegisterProfileSuccess => ({\n    type: GET_REGISTER_PROFILE_SUCCESS,\n    userData\n})\nconst getRegisterProfileFailed = (): getRegisterProfileFailed => ({\n    type: GET_REGISTER_PROFILE_FAILED,\n})\n\n\nexport const getRegisterProfile: AppThunk = (userData: TUserWithPassword) => (dispatch: AppDispatch) => {\n    dispatch(getRegisterProfileRequest(userData));\n    return getRegisterUserData(userData)\n        .then((res: TRegistrationResponse) => {\n            if (res && res.success) {\n                dispatch(getRegisterProfileSuccess({\n                    user: res.user,\n                    refreshToken: res.refreshToken,\n                    accessToken: res.accessToken\n                }));\n            } else {\n                dispatch(getRegisterProfileFailed());\n            }\n            return res;\n        })\n        .catch((err) => console.log(\"failed\", err))\n}\n\nexport const GET_LOGIN_REQUEST: \"GET_LOGIN_REQUEST\" = 'GET_LOGIN_REQUEST';\nexport const GET_LOGIN_SUCCESS: 'GET_LOGIN_SUCCESS' = 'GET_LOGIN_SUCCESS';\nexport const GET_LOGIN_FAILED: 'GET_LOGIN_FAILED' = 'GET_LOGIN_FAILED';\n\n\nexport interface getLoginRequest {\n    type: typeof GET_LOGIN_REQUEST;\n    userData: TUserLoginData;\n}\n\nexport interface getLoginSuccess {\n    type: typeof GET_LOGIN_SUCCESS;\n    userData: TUserData;\n}\n\nexport interface getLoginFailed {\n    type: typeof GET_LOGIN_FAILED;\n}\n\n\nconst getLoginRequest = (userData: TUserLoginData): getLoginRequest => ({\n    type: GET_LOGIN_REQUEST,\n    userData\n})\nconst getLoginSuccess = (userData: TUserData): getLoginSuccess => ({\n    type: GET_LOGIN_SUCCESS,\n    userData\n})\nconst getLoginFailed = (): getLoginFailed => ({\n    type: GET_LOGIN_FAILED,\n})\n\nexport const getLogin: AppThunk = (userData: TUserLoginData) => (dispatch: AppDispatch) => {\n    dispatch(getLoginRequest(userData));\n    return getLoginUserData(userData)\n        .then((res: TRegistrationResponse) => {\n            if (res && res.success) {\n                dispatch(getLoginSuccess({\n                    user: res.user,\n                    refreshToken: res.refreshToken,\n                    accessToken: res.accessToken\n                }));\n            } else {\n                dispatch(getLoginFailed());\n            }\n            return res;\n        })\n        .catch((err) => console.log(\"failed\", err))\n}\n\n\nexport const REORDER_PASSWORD_REQUEST: \"REORDER_PASSWORD_REQUEST\" = 'REORDER_PASSWORD_REQUEST';\nexport const REORDER_PASSWORD_SUCCESS: 'REORDER_PASSWORD_SUCCESS' = 'REORDER_PASSWORD_SUCCESS';\nexport const REORDER_PASSWORD_FAILED: 'REORDER_PASSWORD_FAILED' = 'REORDER_PASSWORD_FAILED';\n\n\nexport interface reorderPasswordRequest {\n    type: typeof REORDER_PASSWORD_REQUEST;\n    email: string;\n}\n\nexport interface reorderPasswordSuccess {\n    type: typeof REORDER_PASSWORD_SUCCESS;\n}\n\nexport interface reorderPasswordFailed {\n    type: typeof REORDER_PASSWORD_FAILED;\n}\n\n\nconst reorderPasswordRequest = (email: string): reorderPasswordRequest => ({\n    type: REORDER_PASSWORD_REQUEST,\n    email\n})\nconst reorderPasswordSuccess = (): reorderPasswordSuccess => ({\n    type: REORDER_PASSWORD_SUCCESS,\n\n})\nconst reorderPasswordFailed = (): reorderPasswordFailed => ({\n    type: REORDER_PASSWORD_FAILED,\n})\n\nexport const reorderPassword: AppThunk = (email: string) => (dispatch: AppDispatch) => {\n    dispatch(reorderPasswordRequest(email));\n    return getReorderPassword(email)\n        .then((res: TResponse) => {\n            if (res && res.success) {\n                dispatch(reorderPasswordSuccess());\n            } else {\n                dispatch(reorderPasswordFailed());\n            }\n            return res;\n        })\n        .catch((err) => console.log(\"failed\", err))\n}\n\n\nexport const LOGOUT_REQUEST: \"LOGOUT_REQUEST\" = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILED: 'LOGOUT_FAILED' = 'LOGOUT_FAILED';\n\n\nexport interface logOutRequest {\n    type: typeof LOGOUT_REQUEST;\n    token: string;\n}\n\nexport interface logOutSuccess {\n    type: typeof LOGOUT_SUCCESS;\n}\n\nexport interface logOutFailed {\n    type: typeof LOGOUT_FAILED;\n}\n\n\nconst logOutRequest = (token: string): logOutRequest => ({\n    type: LOGOUT_REQUEST,\n    token\n})\nconst logOutSuccess = (): logOutSuccess => ({\n    type: LOGOUT_SUCCESS,\n\n})\nconst logOutFailed = (): logOutFailed => ({\n    type: LOGOUT_FAILED,\n})\n\nexport const LogOut: AppThunk = (token: string) => (dispatch: AppDispatch) => {\n    dispatch(reorderPasswordRequest(token));\n    return getLogOut(token)\n        .then((res: TResponse) => {\n            if (res && res.success) {\n                dispatch(reorderPasswordSuccess());\n            } else {\n                dispatch(reorderPasswordFailed());\n            }\n            return res;\n        })\n        .catch((err) => console.log(\"failed\", err))\n}\n\n\nexport const GET_USER_DATA_REQUEST: \"GET_USER_DATA_REQUEST\" = 'GET_USER_DATA_REQUEST';\nexport const GET_USER_DATA_SUCCESS: 'GET_USER_DATA_SUCCESS' = 'GET_USER_DATA_SUCCESS';\nexport const GET_USER_DATA_FAILED: 'GET_USER_DATA_FAILED' = 'GET_USER_DATA_FAILED';\n\n\nexport interface getUserDataRequest {\n    type: typeof GET_USER_DATA_REQUEST;\n    accessToken: string\n}\n\nexport interface getUserDataSuccess {\n    type: typeof GET_USER_DATA_SUCCESS;\n    user: TUserData\n}\n\nexport interface getUserDataFailed {\n    type: typeof GET_USER_DATA_FAILED;\n}\n\n\nconst getUserDataRequest = (accessToken: string): getUserDataRequest => ({\n    type: GET_USER_DATA_REQUEST,\n    accessToken\n})\nconst getUserDataSuccess = (user: TUserData): getUserDataSuccess => ({\n    type: GET_USER_DATA_SUCCESS,\n    user\n\n})\nconst getUserDataFailed = (): getUserDataFailed => ({\n    type: GET_USER_DATA_FAILED,\n})\n\nexport const initialUserData: AppThunk = (accessToken: string) => (dispatch: AppDispatch) => {\n    dispatch(getUserDataRequest(accessToken));\n    return getUserData(accessToken)\n        .then((res: TRegistrationResponse) => {\n            if (res && res.success) {\n                dispatch(getUserDataSuccess({\n                    user: res.user,\n                    refreshToken: res.refreshToken,\n                    accessToken: res.accessToken\n                }))\n                ;\n            } else {\n                dispatch(getUserDataFailed());\n            }\n            return res;\n        })\n        .catch((err) => console.log(\"failed\", err))\n}\n\nexport const GET_UPDATE_USER_DATA_REQUEST: \"GET_UPDATE_USER_DATA_REQUEST\" = 'GET_UPDATE_USER_DATA_REQUEST';\nexport const GET_UPDATE_USER_DATA_SUCCESS: 'GET_UPDATE_USER_DATA_SUCCESS' = 'GET_UPDATE_USER_DATA_SUCCESS';\nexport const GET_UPDATE_USER_DATA_FAILED: 'GET_UPDATE_USER_DATA_FAILED' = 'GET_UPDATE_USER_DATA_FAILED';\n\n\nexport interface getUpdateUserDataRequest {\n    type: typeof GET_UPDATE_USER_DATA_REQUEST;\n    accessToken: string,\n    user: TUserWithPassword\n}\n\nexport interface getUpdateUserDataSuccess {\n    type: typeof GET_UPDATE_USER_DATA_SUCCESS;\n    user: TUserData\n}\n\nexport interface getUpdateUserDataFailed {\n    type: typeof GET_UPDATE_USER_DATA_FAILED;\n}\n\n\nconst getUpdateUserDataRequest = (accessToken: string, user: TUserWithPassword): getUpdateUserDataRequest => ({\n    type: GET_UPDATE_USER_DATA_REQUEST,\n    accessToken,\n    user\n})\nconst getUpdateUserDataSuccess = (user: TUserData): getUpdateUserDataSuccess => ({\n    type: GET_UPDATE_USER_DATA_SUCCESS,\n    user\n\n})\nconst getUpdateUserDataFailed = (): getUpdateUserDataFailed => ({\n    type: GET_UPDATE_USER_DATA_FAILED,\n})\n\nexport const getUpdateUserData: AppThunk = (accessToken: string, user: TUserWithPassword) => (dispatch: AppDispatch) => {\n    dispatch(getUpdateUserDataRequest(accessToken, user));\n    return updateUserData(accessToken, user)\n        .then((res: TRegistrationResponse) => {\n            if (res && res.success) {\n                dispatch(getUpdateUserDataSuccess({\n                    user: res.user,\n                    refreshToken: res.refreshToken,\n                    accessToken: res.accessToken\n                }))\n                ;\n            } else {\n                dispatch(getUpdateUserDataFailed());\n            }\n            return res;\n        })\n        .catch((err) => console.log(\"failed\", err))\n}","import {ChangeEvent, useState} from \"react\";\nimport styles from \"./enterence.module.css\";\nimport {Button, EmailInput, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {AuthForm} from \"../auth/auth-form\";\nimport {AuthExtra} from \"../auth/auth-extra\";\nimport {getLogin} from \"../../services/actions/auth\";\nimport {useDispatch} from 'react-redux';\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {setCookie} from \"../../utils/cookies-helpers\";\nimport {TRegistrationResponse} from \"../../api/api\";\n\n\nfunction Entrance() {\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('bob@example.com')\n    const [password, setPassword] = useState('password')\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.target.value)\n    }\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.target.value)\n    }\n    const history = useHistory();\n    const location = useLocation();\n\n    function logIn() {\n        (dispatch(getLogin({email, password})) as any)\n            .then((res: TRegistrationResponse) => {\n                    const seconds = 1200; //20 mins\n                    setCookie('accessToken', res.accessToken, seconds)\n                    return res;\n                }\n            )\n            .then((res: TRegistrationResponse) => {\n                history.push(res.accessToken ? (location as any).state?.from.pathname : '/');\n            })\n    }\n\n    return (\n        <div className={styles.container}>\n            <AuthForm\n                onSubmit={logIn}\n                title={'Вход'}\n                text={'Вы — новый пользователь?'}\n                link={''}\n                linkText={'Зарегистрироваться'}\n                route={'/register'}\n            >\n                <div className={styles.box}>\n                    <EmailInput onChange={onChangeEmail} value={email} name={'email'}/>\n                </div>\n                <div className={styles.box}>\n                    <PasswordInput onChange={onChangePassword} value={password} name={'password'}/>\n                </div>\n                <div className={styles.button}>\n                    <Button type=\"primary\" size=\"large\">{'Войти'}</Button>\n                </div>\n            </AuthForm>\n            <AuthExtra text={'Забыли пароль?'} link={''} linkText={'Восстановить пароль'} route={'/forgot-password'}/>\n        </div>\n    )\n}\n\nexport default Entrance","import styles from \"./registration.module.css\";\nimport {Button, EmailInput, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {ChangeEvent, useState} from \"react\";\nimport {AuthForm} from \"../auth/auth-form\";\nimport {TRegistrationResponse} from \"../../api/api\";\nimport {useDispatch} from 'react-redux';\nimport {getRegisterProfile} from \"../../services/actions/auth\";\nimport {useHistory} from \"react-router-dom\";\nimport {setCookie} from \"../../utils/cookies-helpers\";\n\n\nfunction Registration() {\n    const [name, setName] = useState('')\n    const onChangeName = (e: ChangeEvent<HTMLInputElement>): void => {\n        setName(e.target.value)\n    }\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>): void => {\n        setEmail(e.target.value)\n    }\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>): void => {\n        setPassword(e.target.value)\n    }\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    function signUp() {\n        (dispatch(getRegisterProfile({email, password, name})) as any) //Promise\n            .then((res: TRegistrationResponse) => {\n                sessionStorage.setItem('refreshToken', res.refreshToken);\n                const seconds = 1200; //20 mins\n                setCookie('accessToken', res.accessToken, seconds);\n            })\n            .then(() => history.replace({pathname: '/'}))\n    }\n\n    return (\n        <AuthForm\n            onSubmit={signUp}\n            title={'Регистрация'}\n            text={'Уже зарегистрированы?'}\n            link={''}\n            linkText={'Войти'}\n            route={'/login'}\n        >\n            <div className={styles.box}>\n                <Input\n                    type={'text'}\n                    onChange={onChangeName}\n                    placeholder={'Имя'}\n                    value={name}\n                    name={'name'}\n                    error={false}\n                    errorText={'Ошибка'}\n                    size={'default'}\n                />\n            </div>\n            <div className={styles.box}>\n                <EmailInput onChange={onChangeEmail} value={email} name={'email'}/>\n            </div>\n            <div className={styles.box}>\n                <PasswordInput onChange={onChangePassword} value={password} name={'password'}/>\n            </div>\n            <div className={styles.button}>\n                <Button type=\"primary\" size=\"large\">{'Зарегистрироваться'}</Button>\n            </div>\n        </AuthForm>\n    )\n}\n\nexport default Registration","import styles from \"./forgot-password.module.css\";\nimport {Button, EmailInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {ChangeEvent, useState} from \"react\";\nimport {AuthForm} from \"../auth/auth-form\";\nimport {useHistory} from 'react-router-dom';\nimport {useDispatch} from \"react-redux\";\nimport {reorderPassword} from \"../../services/actions/auth\";\n\n\nfunction ForgotPassword() {\n    const [email, setEmail] = useState('bob@example.com')\n    const history = useHistory();\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.target.value)\n    }\n    const dispatch = useDispatch()\n\n    function resetPassword() {\n        (dispatch(reorderPassword(email)) as any)\n            .then(() => history.push({pathname: '/password-recovery', state: {fromRecovery: true}}))\n    }\n\n    return (\n        <AuthForm\n            title={'Восстановление пароля'}\n            text={'Вспомнили пароль?'}\n            link={''}\n            linkText={'Войти'}\n            route={'/login'}\n            onSubmit={resetPassword}\n        >\n            <div className={styles.box}>\n                <EmailInput onChange={onChangeEmail} value={email} name={'Укажите e-mail'}/>\n            </div>\n            <div className={styles.button}>\n                <Button type=\"primary\" size=\"large\">{'Восстановить'}</Button>\n            </div>\n        </AuthForm>\n    )\n}\n\nexport default ForgotPassword","export default __webpack_public_path__ + \"static/media/bun02.64328c34.png\";","import styles from \"./not-found-page.module.css\";\nimport bun from '../../images/bun02.png'\n\nexport function NotFoundPage() {\n    return (\n        <div className={styles.box}>\n            <h2 className={styles.text}> 404 Not Found </h2>\n            <img src={bun} alt=\"булка\"/>\n        </div>\n    )\n}","import {AuthForm} from \"../auth/auth-form\";\nimport styles from \"../registration/registration.module.css\";\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {ChangeEvent, useState} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {NotFoundPage} from \"../not-found-page/not-found-page\";\n\nfunction PasswordRecovery(props: any):any {\n\n    const [emailCode, setEmailCode] = useState('')\n    const [password, setPassword] = useState('')\n    const onChangeCode = (e: ChangeEvent<HTMLInputElement>) => {\n        setEmailCode(e.target.value)\n    }\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.target.value)\n    }\n\n    if (!props.location.state?.fromRecovery) {\n        return <NotFoundPage/>\n    }\n\n    return (\n        <AuthForm\n            title={'Восстановление пароля'}\n            text={'Вспомнили пароль?'}\n            link={''}\n            linkText={'Войти'}\n            route={'/login'}\n        >\n\n            <div className={styles.box}>\n                <PasswordInput onChange={onChangePassword} value={password} name={'password'}/>\n            </div>\n            <div className={styles.box}>\n                <Input\n                    type={'text'}\n                    onChange={onChangeCode}\n                    placeholder={'Введите код из письма'}\n                    value={emailCode}\n                    name={'name'}\n                    error={false}\n                    errorText={'Ошибка'}\n                    size={'default'}\n                />\n            </div>\n            <div className={styles.button}>\n                <Button type=\"primary\" size=\"large\">{'Сохранить'}</Button>\n            </div>\n        </AuthForm>\n    )\n}\n\nexport default withRouter(PasswordRecovery)","import {TUserData} from '../../utils/types'\nimport {TAction} from \"../actions\";\nimport {REMOVE_USER, SET_USER_DATA} from \"../actions/auth\";\n\nexport const userData: TUserData = {\n    user: {\n        email: \"\",\n        name: \"\"\n    },\n    accessToken: \"\",\n    refreshToken: \"\"\n}\n\n\nexport const userReducer = (state: TUserData = userData, action: TAction): TUserData => {\n    switch (action.type) {\n        case SET_USER_DATA: {\n            return {\n                ...state,\n                user: action.userData.user,\n                refreshToken: action.userData.refreshToken,\n                accessToken: action.userData.accessToken\n            };\n        }\n        case REMOVE_USER: {\n            return {\n                ...state,\n                user: {\n                    email: \"\",\n                    name: \"\"\n                },\n                accessToken: \"\",\n                refreshToken: \"\"\n            }\n        }\n        default: {\n            return state\n        }\n\n    }\n}","import styles from \"./profile-navigation.module.css\";\nimport {LogOut, REMOVE_USER} from \"../../services/actions/auth\";\nimport {useDispatch} from 'react-redux';\nimport {userData} from \"../../services/reducers/auth\";\nimport {NavLink, useHistory} from \"react-router-dom\";\nimport {eraseCookie, getCookie} from \"../../utils/cookies-helpers\";\n\nfunction ProfileNavigation(props: any) {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const token = getCookie('accessToken');\n\n    function logOut() {\n        (dispatch(LogOut(token)) as any)\n            .then(() => dispatch({type: REMOVE_USER, userData}))\n            .finally(() => {\n                sessionStorage.removeItem('refreshToken')\n                eraseCookie('accessToken')\n                history.replace({pathname: '/login'})\n            })\n    }\n\n    return (\n        <div className={styles.navContainer}>\n            <nav className={styles.linksList}>\n                <NavLink className={styles.link} to={\"/profile\"} activeClassName={styles.activeLink}>\n                    Профиль\n                </NavLink>\n                <NavLink className={styles.link} to={\"/order\"} activeClassName={styles.activeLink}>\n                    История заказов\n                </NavLink>\n                <button type=\"button\" className={styles.link} onClick={logOut}>\n                    Выход\n                </button>\n            </nav>\n            <p className={styles.paragraph}>В этом разделе вы можете\n                изменить свои персональные данные</p>\n        </div>\n    )\n}\n\nexport default ProfileNavigation","import styles from './user-profile.module.css'\nimport {Button, EmailInput, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ProfileNavigation from \"../profile-navigation/profile-navigation\";\nimport {getUpdateUserData, initialUserData} from \"../../services/actions/auth\";\nimport {useDispatch} from \"react-redux\";\nimport {ChangeEvent, useEffect, useState} from \"react\";\nimport {getCookie} from \"../../utils/cookies-helpers\";\nimport {TRegistrationResponse} from \"../../api/api\";\nimport {TUser, useSelector} from \"../../utils/types\";\n\nfunction UserProfile() {\n    const dispatch = useDispatch();\n    const {user} = useSelector(({userReducer}) => userReducer)\n\n\n    const [targetName, setTargetName] = useState(user.name)\n    const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\n        setTargetName(e.target.value)\n    }\n    const [targetEmail, setTargetEmail] = useState(user.email)\n    const [targetPassword, setTargetPassword] = useState('')\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\n        setTargetEmail(e.target.value)\n    }\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n        setTargetPassword(e.target.value)\n    }\n\n    useEffect(() => {\n        const token = getCookie('accessToken');\n        if (!token) return;\n        (dispatch(initialUserData(token)) as any)\n            .then((res: TRegistrationResponse) => {\n                setUserForm(res.user)\n            })\n    }, [dispatch])\n\n    function updateData() {\n        const token = getCookie('accessToken');\n        if (token) {\n            (dispatch(getUpdateUserData(token, {\n                name: targetName,\n                email: targetEmail,\n                password: targetPassword\n            })) as any)\n                .then((res: TRegistrationResponse) => {\n                    setUserForm(res.user)\n                })\n        }\n    }\n\n    function setUserForm(user: TUser): void {\n        setTargetName(user.name)\n        setTargetEmail(user.email)\n        setTargetPassword('')\n    }\n\n    return (\n        <div className={styles.mainContainer}>\n            <ProfileNavigation type={'profile'}/>\n            <div className={styles.formContainer}>\n                <div className={styles.box}>\n                    <Input\n                        type={'text'}\n                        onChange={onChangeName}\n                        placeholder={'Имя'}\n                        value={targetName}\n                        name={'name'}\n                        error={false}\n                        errorText={'Ошибка'}\n                        size={'default'}\n                    />\n                </div>\n                <div className={styles.box}>\n                    <EmailInput onChange={onChangeEmail} value={targetEmail} name={'email'}/>\n                </div>\n                <div className={styles.box}>\n                    <PasswordInput onChange={onChangePassword} value={targetPassword} name={'password'}/>\n                </div>\n                <div className={styles.button}>\n                    <Button type=\"secondary\" size=\"medium\">{'Отмена'}</Button>\n                    <Button type=\"primary\" size=\"large\" onClick={updateData}>{'Сохранить'}</Button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default UserProfile","import styles from \"./order-feed.module.css\";\n\nexport default function OrderFeed() {\n    return (\n        <div className={styles.container}>\n            <h2 className={styles.text}>Coming soon</h2>\n        </div>\n    )\n}","import {Redirect, Route, useLocation} from 'react-router-dom';\nimport {getCookie} from \"../../utils/cookies-helpers\";\n\n//todo any\nexport function ProtectedRoute({children, ...rest}: Record<string, any>) {\n    const token = getCookie('accessToken');\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                token ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/login',\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n","import {Redirect, Route} from 'react-router-dom';\nimport {getCookie} from \"../../utils/cookies-helpers\";\n\n//todo any\nexport function NonLoginRoute({children, ...rest}: Record<string, any>) {\n    const token = getCookie('accessToken');\n\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                token ? (\n                    <Redirect\n                        to={{\n                            pathname: '/',\n                            state: {from: location}\n                        }}\n                    />\n                ) : (\n                    children\n                )\n            }\n        />\n    );\n}\n","import React, {useEffect} from 'react';\nimport styles from './app.module.css';\nimport BurgerIngredients from \"../burger-ingredients/burger-ingredients\";\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\nimport OrderDetails from \"../order-details/order-details\";\nimport AppHeader from \"../header/app-header\";\nimport BurgerConstructor from \"../burger-constructor/burger-constructor\";\nimport {useDispatch} from 'react-redux';\nimport {\n    ADD_INGREDIENT_TO_CONSTRUCTOR,\n    CLOSE_MODAL,\n    getIngredients,\n    INCREASE_COUNTER,\n    SHOW_INGREDIENT\n} from \"../../services/actions\";\nimport {DndProvider} from \"react-dnd\";\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {TIngredient, useSelector} from \"../../utils/types\";\nimport Entrance from \"../../pages/enterence/enterence\";\nimport Registration from \"../../pages/registration/registration\";\nimport ForgotPassword from \"../../pages/forgot-password/forgot-password\";\nimport PasswordRecovery from \"../../pages/password-recovery/password-recovery\";\nimport UserProfile from \"../../pages/user-profile/user-profile\";\nimport {Route, Switch, useHistory, useLocation} from \"react-router-dom\";\nimport {NotFoundPage} from \"../../pages/not-found-page/not-found-page\";\nimport OrderFeed from \"../../pages/order-feed/order-feed\";\nimport {ProtectedRoute} from \"../protected-route/protected-route\";\nimport {NonLoginRoute} from \"../non-login-route/non-login-route\";\nimport Modal from \"../modal/modal\";\n\nfunction App() {\n    let history = useHistory();\n    let location: any = useLocation()\n    let background =\n        history.action === 'PUSH' && location.state && location.state.background;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getIngredients())\n    }, [dispatch])\n\n    function handleIngredientClick(item: TIngredient) {\n        dispatch({type: SHOW_INGREDIENT, ingredient: item})\n    }\n\n\n    const handleDrop = (item: TIngredient) => {\n        dispatch({type: INCREASE_COUNTER, itemId: item._id})\n        dispatch({type: ADD_INGREDIENT_TO_CONSTRUCTOR, ingredient: {...item, key: uuidv4()}})\n    }\n\n\n    function closeModal() {\n        dispatch({type: CLOSE_MODAL})\n        if (isIngredientDetailsOpen) {\n            history.goBack()\n        }\n    }\n\n    const {\n        isIngredientDetailsOpen,\n    } = useSelector(({ingredientsReducer}) => ingredientsReducer)\n\n    return (\n        <div className={styles.app}>\n            <AppHeader/>\n            <Switch location={background || location}>\n                <Route path={['/', '/react-burger']} exact={true}>\n                    <DndProvider backend={HTML5Backend}>\n                        <div className={styles.bar}>\n                            <BurgerIngredients\n                                onIngredientClick={handleIngredientClick}\n                            />\n                            <BurgerConstructor\n                                onDropHandler={handleDrop}\n                            />\n                        </div>\n                    </DndProvider>\n                </Route>\n                <NonLoginRoute path='/login'>\n                    <Entrance/>\n                </NonLoginRoute>\n                <NonLoginRoute path='/register'>\n                    <Registration/>\n                </NonLoginRoute>\n                <NonLoginRoute path='/forgot-password'>\n                    <ForgotPassword/>\n                </NonLoginRoute>\n                <NonLoginRoute path='/password-recovery'>\n                    <PasswordRecovery/>\n                </NonLoginRoute>\n                <ProtectedRoute path='/profile'>\n                    <UserProfile/>\n                </ProtectedRoute>\n                <ProtectedRoute path='/order'>\n                    <OrderFeed/>\n                </ProtectedRoute>\n                <Route path=\"/ingredient/:id\">\n                    <IngredientDetails/>\n                </Route>\n                <Route>\n                    <NotFoundPage/>\n                </Route>\n            </Switch>\n            {background && <Route path=\"/ingredient/:id\"\n                                  children={<Modal closeModal={closeModal}\n                                                   title={'Детали ингредиента'}\n                                                   isOpen={isIngredientDetailsOpen}\n                                  >\n                                      <IngredientDetails/>\n                                  </Modal>}\n            />}\n            <OrderDetails\n                closeModal={closeModal}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import {TIngredientForConstructor} from \"./types\";\n\nexport function insertToArr(arr: Array<any>, index: number, newItem: TIngredientForConstructor) {\n    return [...arr.slice(0, index), newItem, ...arr.slice(index)]\n}\n\nexport function removeFromArray(arr: Array<any>, index: number) {\n    const arr1 = [...arr].splice(0, index)\n    const arr2 = [...arr].splice(index + 1)\n    return [...arr1, ...arr2]\n}\n\nexport function changeOrder(arr: Array<any>, dragIndex: number, hoverIndex: number) {\n    // const dragIndex = arr.findIndex(item => item === 'x')\n    const dragItem = arr[dragIndex]\n    const result = [...arr];\n    const resultWithoutOldItem = removeFromArray(result, dragIndex)\n    //const hoverIndex = resultWithoutOldItem.findIndex(item => item === 'c')\n    return insertToArr(resultWithoutOldItem, hoverIndex, dragItem)\n}\n\n\n","import {combineReducers} from 'redux';\nimport {\n    ADD_INGREDIENT_TO_CONSTRUCTOR,\n    ADD_INGREDIENT_TO_NON_BUN_ITEMS,\n    CLOSE_MODAL,\n    DECREASE_COUNTER,\n    GET_INGREDIENTS_FAILED,\n    GET_INGREDIENTS_REQUEST,\n    GET_INGREDIENTS_SUCCESS,\n    GET_ORDER_INGREDIENTS_FAILED,\n    GET_ORDER_INGREDIENTS_REQUEST,\n    GET_ORDER_INGREDIENTS_SUCCESS,\n    INCREASE_BUN_COUNTER,\n    INCREASE_COUNTER,\n    MOVE_INSIDE_CONSTRUCTOR,\n    REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\n    REORDER_CONSTRUCTOR,\n    SHOW_INGREDIENT,\n    TAction\n} from '../actions'\nimport {changeOrder} from \"../../utils/array-helper\";\nimport {TConstructorItem, TState} from \"../../utils/types\";\nimport {userReducer} from \"./auth\";\n\nexport const initialState: TState = {\n    ingredientIds: [],\n    ingredients: [],\n    constructorIngredients: [],\n    nonBunIngredientsList: [],\n    dragContainer: [],\n    ingredientDetail: {},\n    order: null,\n    isOrderDetailsOpen: false,\n    isIngredientDetailsOpen: false,\n    loader: true,\n    counter: {},\n    itemsRequest: false\n};\n\nexport const ingredientsReducer = (state: TState = initialState, action: TAction): TState => {\n    switch (action.type) {\n        case GET_INGREDIENTS_REQUEST: {\n            return {\n                ...state,\n                itemsRequest: true\n            };\n        }\n        case GET_INGREDIENTS_SUCCESS: {\n            return {...state, loader: false, ingredients: action.ingredients};\n        }\n        case GET_INGREDIENTS_FAILED: {\n            return {...state, loader: true};\n        }\n        default: {\n            return state\n        }\n\n        case GET_ORDER_INGREDIENTS_REQUEST: {\n            return {\n                ...state,\n                ingredientIds: action.ingredientIds,\n            }\n        }\n        case GET_ORDER_INGREDIENTS_SUCCESS: {\n            return {\n                ...state,\n                order: action.order,\n                isOrderDetailsOpen: true\n            };\n        }\n        case GET_ORDER_INGREDIENTS_FAILED: {\n            return {...state, loader: true};\n        }\n        case ADD_INGREDIENT_TO_CONSTRUCTOR: {\n            const isBun = action.ingredient.type === 'bun';\n            const isBunAdded = Boolean(state.constructorIngredients.find((item) => item.type === 'bun'));\n\n            if (isBun && isBunAdded) {\n                let ingredients = state.constructorIngredients.filter((item) => item.type !== 'bun')\n                ingredients = [...ingredients, action.ingredient]\n                return {\n                    ...state,\n                    constructorIngredients: ingredients,\n                };\n            } else {\n                return {\n                    ...state,\n                    constructorIngredients: [...state.constructorIngredients, action.ingredient]\n                };\n            }\n\n\n        }\n        case ADD_INGREDIENT_TO_NON_BUN_ITEMS: {\n            return {...state, nonBunIngredientsList: action.items};\n        }\n        case REMOVE_INGREDIENT_FROM_CONSTRUCTOR: {\n            return {\n                ...state,\n                dragContainer: state.nonBunIngredientsList.filter((item: TConstructorItem, index: number) => index !== action.value.index),\n            };\n        }\n        case SHOW_INGREDIENT: {\n            return {\n                ...state,\n                isIngredientDetailsOpen: true,\n                ingredientDetail: action.ingredient\n            };\n        }\n        case CLOSE_MODAL: {\n            return {\n                ...state,\n                isIngredientDetailsOpen: false,\n                isOrderDetailsOpen: false,\n                ingredientDetail: {}\n            };\n        }\n        case REORDER_CONSTRUCTOR: {\n            return {\n                ...state,\n                dragContainer: changeOrder(state.nonBunIngredientsList, action.dragIndex, action.hoverIndex)\n            };\n        }\n        case MOVE_INSIDE_CONSTRUCTOR: {\n            return {...state, constructorIngredients: [state.constructorIngredients[0], ...state.dragContainer]};\n        }\n        case INCREASE_COUNTER: {\n            const prevValue = state.counter[action.itemId] ? state.counter[action.itemId] : 0;\n            return {...state, counter: {...state.counter, [action.itemId]: prevValue + 1}};\n        }\n        case DECREASE_COUNTER: {\n            const prevValue = state.counter[action.itemId] ? state.counter[action.itemId] : 1;\n            return {...state, counter: {...state.counter, [action.itemId]: prevValue - 1}};\n        }\n    }\n}\n\nexport const rootReducer = combineReducers({ingredientsReducer, userReducer})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport {rootReducer} from './services/reducers';\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst composeEnhancers =\n    typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n        : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const state = createStore(rootReducer, enhancer);\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n        <Provider store={state}>\n            <App/>\n        </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-constructor_container__332QY\",\"list\":\"burger-constructor_list__2lXaw\",\"sum\":\"burger-constructor_sum__487I2\",\"btn\":\"burger-constructor_btn__2h1tY\",\"total\":\"burger-constructor_total__2z4fk\",\"cunt\":\"burger-constructor_cunt__Pxrak\",\"box\":\"burger-constructor_box__2RXMU\",\"bunSection\":\"burger-constructor_bunSection__7_K7a\",\"middleItemsList\":\"burger-constructor_middleItemsList__1bxi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"modal-overlay_box__2iUV4\",\"btn\":\"modal-overlay_btn__1rGIK\",\"overlay\":\"modal-overlay_overlay__AKixE\",\"title\":\"modal-overlay_title__2XLtc\",\"modal_open\":\"modal-overlay_modal_open__BkykD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"auth_container__6JbhR\",\"main\":\"auth_main__39ICt\",\"option\":\"auth_option__3Ga2u\",\"link\":\"auth_link__2EEES\",\"extra\":\"auth_extra__3dUIX\",\"form\":\"auth_form__2yqtY\",\"title\":\"auth_title__2q0CF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"registration_box__2wKKT\",\"button\":\"registration_button__rLzSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"profile-navigation_navContainer__2nP7m\",\"link\":\"profile-navigation_link__3iWW9\",\"activeLink\":\"profile-navigation_activeLink__hhwI1\",\"paragraph\":\"profile-navigation_paragraph__1Uadw\",\"linksList\":\"profile-navigation_linksList__2-hdI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ingredient_box__3A1Z_\",\"price\":\"ingredient_price__2oUC4\",\"name\":\"ingredient_name__25JNI\",\"number\":\"ingredient_number__1DkIb\",\"image\":\"ingredient_image__1SSKq\",\"wrapper\":\"ingredient_wrapper__1haVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"user-profile_mainContainer__zEnOm\",\"formContainer\":\"user-profile_formContainer__2Lrq9\",\"box\":\"user-profile_box__204P1\",\"button\":\"user-profile_button__31dXX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"order-ditails_title__23Wu7\",\"image\":\"order-ditails_image__3QC6D\",\"orderStatus\":\"order-ditails_orderStatus__3rs5r\",\"addInfo\":\"order-ditails_addInfo__twf9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"enterence_container__1384X\",\"box\":\"enterence_box__1_isw\",\"button\":\"enterence_button__1clIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__M9MMq\",\"bar\":\"app_bar__3US2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"forgot-password_form__2i2rR\",\"box\":\"forgot-password_box__2_g_y\",\"button\":\"forgot-password_button__zWl4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"not-found-page_box__nyuV9\",\"text\":\"not-found-page_text__1bzml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-feed_container__1jhjv\",\"text\":\"order-feed_text__3duPQ\"};"],"sourceRoot":""}